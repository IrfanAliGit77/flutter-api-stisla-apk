var apiData = {
	"topBandName" : "Zoho Sprints API Documentation", 
	"APIDomain" : "sprintsapi.zoho.com",
	"APIList" : [
			{
				"tabName" : "Overview",
				"needSubTabs" : false,
				"tabValues" : [ {
					"name" : "Overview",
					"desc" : "Zoho Sprints API is REST based and it uses the Oauth 2.0 protocol for authentication. This document helps you to fetch and modify data in Sprints with our API. It uses HTTP response codes to indicate API errors. These APIs facilitate integration with other Zoho applications and third-party tools with ease. The responses are JSON based.",
					"request" : [ {
						"name" : "API Root Endpoint",
						"requrl" : "sprintsapi.zoho.com/zsapi"
					} ]
				} ]
			},
			{
				"tabName" : "Authentication",
				"tabValues" : [
						{
							"name" : "Authentication",
							"desc" : "Zoho Sprints API functions upon the Oauth 2.0 protocol where the access is granted in terms of \"tokens\". Access token and Refresh token are the ones that are critical in this framework."
						},
						{
							"name" : "Initial setup",
							"subtitles" : [ {
								"desc" : "Before you get started, you’ll have to register with us and set the application up.",
								"orderlist" : [
										"Register your application with our Zoho Accounts team.",
										//"Go to https://accounts.zoho.com/developerconsole <br> <img class=\"w100per\" src=\""+Utils.imgStaticURL+"/images/apidocimage/oauth-1.png\">",
										"Click <span class=\"textbold\">Add Client ID</span>",
										//"Enter your application's name, domain, authorized redirect URIs, and click <span class=\"textbold\">Create</span> . <img class=\"w100per\" src=\""+Utils.imgStaticURL+"/images/apidocimage/oauth-2.png\">",
										//"You will receive the Client ID and Client Secret like the following: <img class=\"w100per\" src=\""+Utils.imgStaticURL+"/images/apidocimage/oauth-3.png\">",
										"You will have to construct a URL to generate a grant token. Click <a class=\"anchor\" href=\"#Generategranttoken\">here</a> to learn about the parameters required to construct the URL.",
										"Hit the constructed URL on your browser.",
										//"Confirm whether your application can access the Sprints APIs. <img class=\"w100per\" src=\""+Utils.imgStaticURL+"/images/apidocimage/oauth-4.png\">",
										"Once you <span class=\"textbold\">Accept</span>, you will receive a code (grant token) as a query string in the redirect URL.",
										"<a class=\"anchor\" href=\"#Getaccessandrefreshtoken\">Get an access token and a refresh token</a> by exchanging the code along with the client's ID and secret."
																																																					// i18n
								]
							} ]
						},
						{
							"name" : "Generate grant token",
							"id":"generatetoken",
							"desc" : "The grant token is the authorization code that's used in Oauth to fetch the access and refresh tokens. <br> <span class=\"note\"><span>Note:</span> The expiry period of this token is one minute.</span>",
							"url" : "https://accounts.zoho.com/oauth/v2/auth",
							"method" : "GET",
							"subtitles" : [ {
								"name" : "Parameters",
								"params" : {
									"data" : [
											{
												"name" : "scope",
												"desc" : "The specific module in the product for which the access has to be granted.<br>Example: ZohoSprints.projects.READ, ZohoSprints.projects.CREATE",
												"isrequired" : ""
											},
											{
												"name" : "client_id",
												"desc" : "The client ID received during registration. It is used to identify the application that raises the request.",
												"isrequired" : ""
											},
											{
												"name" : "state",
												"desc" : "A string used by the client to ensure authenticity between the request and callback. It is a recommended parameter that’s used to prevent cross-site request forgery.",
												"isrequired" : ""
											},
											{
												"name" : "response_type",
												"desc" : "code",
												"isrequired" : ""
											},
											{
												"name" : "redirect_uri",
												"desc" : "The Redirect URI provided during registration.",
												"isrequired" : ""
											},
											{
												"name" : "access_type",
												"desc" : "Set value as <b>offline</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "https://accounts.zoho.com/oauth/v2/auth?scope=ZohoSprints.teams.READ&client_id=1***.U*****************************E&state=67452389162534&response_type=code&redirect_uri=https://www.zylker.com/oauth2callback&access_type=offline"
							} ]
						},
						{
							"name" : "Get access and refresh token",
							"desc" : "The code that is received upon successful authorization (discussed above) must be sent via POST to the following URL with the required parameters to obtain access and refresh tokens.<br><br><span class=\"note\"><span>Note:</span> Make a note of the refresh token you obtain in this process because it is required to generate new access tokens every time the current one expires.</span>",
							"url" : "https://accounts.zoho.com/oauth/v2/token",
							"method" : "POST",
							"subtitles" : [ {
								"name" : "Parameters",
								"params" : {
									"data" : [
											{
												"name" : "code",
												"desc" : "The code that you are exchanging for an access token.",
												"isrequired" : ""
											},
											{
												"name" : "client_id",
												"desc" : "The Client ID received during registration. It is used to identify the application that raises the request.",
												"isrequired" : ""
											},
											{
												"name" : "client_secret",
												"desc" : "The Client Secret received during registration.",
												"isrequired" : ""
											},
											{
												"name" : "redirect_uri",
												"desc" : "The Redirect URI provided during registration.",
												"isrequired" : ""
											},
											{
												"name" : "grant_type",
												"desc" : "authorization_code",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST  https://accounts.zoho.com/oauth/v2/token \\--data-urlencode 'code=1***.a******************************d.f******************************0' \\--data-urlencode 'client_id=1***.U****************************E' \\--data-urlencode 'client_secret=f****************************************0' \\--data-urlencode 'redirect_uri=https://www.zylker.zoho.com/oauth2callback' \\--data-urlencode 'grant_type=authorization_code'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"access_token":"1***.b******************************b.c******************************6", "refresh_token": "1***.a******************************0.2******************************b", "expires_in_sec":3600,"api_domain":"https://www.zohoapis.com","token_type":"Bearer","expires_in":3600000}'
							} ]
						},
						{
							"name" : "Regenerate access token",
							"desc" : "The access token that you obtain via the authorization code will last for an hour only. When it expires, you can make use of the refresh token that was obtained along with the expired token to generate a new access token. ",
							"url" : "https://accounts.zoho.com/oauth/v2/token",
							"method" : "POST",
							"subtitles" : [ {
								"name" : "Parameters",
								"params" : {
									"data" : [
											{
												"name" : "refresh_token",
												"desc" : "The refresh token obtained in this <a class=\"anchor\" href=\"#Getaccessandrefreshtoken\">step</a>.",
												"isrequired" : ""
											},
											{
												"name" : "client_id",
												"desc" : "The Client ID received during registration. It is used to identify the application that raises the request.",
												"isrequired" : ""
											},
											{
												"name" : "client_secret",
												"desc" : "The Client Secret received during registration.",
												"isrequired" : ""
											},
											{
												"name" : "redirect_uri",
												"desc" : "The Redirect URI provided during registration.",
												"isrequired" : ""
											},
											{
												"name" : "grant_type",
												"desc" : "refresh_token",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST  https://accounts.zoho.com/oauth/v2/token \\--data-urlencode 'refresh_token=1***.a******************************0.2******************************b' \\--data-urlencode 'client_id=1***.U****************************E' \\--data-urlencode 'client_secret=f****************************************0' \\--data-urlencode 'redirect_uri=https://www.zylker.zoho.com/oauth2callback' \\--data-urlencode 'grant_type=refresh_token'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"access_token":"1***.a******************************9.d******************************1", "expires_in_sec":3600,"api_domain":"https://www.zohoapis.com","token_type":"Bearer","expires_in":3600000}'
							} ]
						},
						{
							"name" : "Revoke refresh token",
							"desc" : "Include the given params in your POST URL to revoke your refresh token.",
							"url" : "https://accounts.zoho.com/oauth/v2/token/revoke",
							"method" : "POST",
							"subtitles" : [ {
								"name" : "Parameters",
								"params" : {
									"data" : [
											{
												"name" : "token",
												"desc" : "The refresh token obtained in this <a class=\"anchor\" href=\"#Getaccessandrefreshtoken\">step</a>.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST  https://accounts.zoho.com/oauth/v2/token/revoke \\--data-urlencode 'token=1***.a******************************0.2******************************b'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
						} ]
			},
			{
				"tabName" : "Getting Started",
				"tabValues" : [
						{
							"name" : "Getting Started",
							"desc" : "Ensure to have the header in the following format in all the Sprints APIs:", 
							"unorderlist" : [
									"Header name should be <b>Authorization</b>",
									"Header value should be <b>Zoho-oauthtoken&lt;spcae&gt;authtoken</b>" ]
						},
						{
							"name" : "HTTP Methods",
							"desc" : "Zoho Sprints APIs enable data manipulation and retrieval through different HTTP methods.",
							"subtitles" : [ {
								"name" : "",
								"desc" : "",
								"table" : {
									"data" : [
											[ "Method", "Purpose" ],
											[ "GET", "Retrieve data" ],
											[ "POST", "Create data and perform actions" ],
											[ "DELETE", "Delete data" ] 
									],
									"class" : "table"
								}
							} ]
						},
						{
							"name" : "Errors",
							"desc" : "Zoho Sprints uses HTTP status codes to indicate success or failure of API calls. The following table lists some commonly used HTTP status codes.",
							"subtitles" : [
									{
										"name" : "HTTP status codes",
										"desc" : "",
										"table" : {
											"data" : [
													[ "Status Code", "Description" ],
													[ "200", "OK" ],
													[ "201", "Created" ],
													[ "400", "Bad request" ],
													[ "401", "Unauthorized (Invalid OAuth access token)" ],
													[ "403", "Forbidden (Unauthorized access)" ],
													[ "404", "URL not found" ],
													[ "405", "Method not allowed (Method called is not supported for the API invoked)" ],
													[ "500", "Internal error" ] 
											],
											"class" : "table"
										}
									},
									{
										"name" : "Sprints status codes",
										"desc" : "",
										"table" : {
											"data" : [
													[ "Status Code", "Description" ],
													[ "7401", "Unauthorized access to url" ],
													[ "7404", "Given URL is wrong" ],
													[ "7421", "Number of API calls exceeded" ],
													[ "7500", "Internal server error while processing this request" ],
													[ "7600", "Incorrect parameter or parameter value or parameter missing" ],
													[ "7700", "Authentication failed" ],
													[ "7602", "Extra parameter found in URL" ] 
											],
											"class" : "table"
										}
									} ]
						},
						{
							"name" : "Conventions",
							"desc" : "",
							"subtitles" : [ {
								"name" : "",
								"desc" : "",
								"orderlist" : [
										"Always ignore undocumented fields or enum values present in the API response. These fields could be either experimental or deprecated.",
										"Every response will return a \"status\" key, you can check the request status using this key."
								]
							} ]
						},
						{
							"name" : "Pagination",
							"desc" : "With Sprints APIs, you can fetch the list of teams, projects, sprints, items and so on. Every API endpoint might have its own range for the number of records returned and we might also change the range for a specific API endpoint without prior notice.",
							"subtitles" : [ {
								"desc" : "The pagination information will be included in the response via the following params:",
								"params" : {
									"data" : [
									        {
								        	  	"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed. The maximum limit is 100."
											},
											{
												"name" : "next",
												"desc" : "If more data is available after listing the range, this param will be set to 'true', else 'false'."
											},
											{
												"name" : "next_index",
												"desc" : "If next is true, this param will be available."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "List of Scopes",
							"desc" : "List of scopes available in Zoho Sprints:",
							"subtitles" : [ {
								"params" : {
									"data" : [
											{
												"name" : "Scope",
												"desc" : "Description"
											},
									        {
								        	  	"name" : "teams",
												"desc" : "Access all the team related API's like settings, link types, global log hours, tags etc.<br>Available types: <b>ZohoSprints.teams.READ</b> <b>ZohoSprints.teams.CREATE</b> <b>ZohoSprints.teams.UPDATE</b> <b>ZohoSprints.teams.DELETE</b>"
											},
											{
												"name" : "projects",
												"desc" : "Access all the projects related API's like project groups, backlog, other project details.<br>Available types: <b>ZohoSprints.projects.READ</b> <b>ZohoSprints.projects.CREATE</b> <b>ZohoSprints.projects.UPDATE</b> <b>ZohoSprints.projects.DELETE</b>"
											},
											{
												"name" : "epic",
												"desc" : "Access all the epic related API's like associated sprints with epics, associated items with epics, other epic details.<br>Available types: <b>ZohoSprints.epic.READ</b> <b>ZohoSprints.epic.CREATE</b> <b>ZohoSprints.epic.UPDATE</b> <b>ZohoSprints.epic.DELETE</b>"
											},
											{
												"name" : "sprints",
												"desc" : "Access all the sprints related API's like sprint details, sprint comments, start, complete, cancel, replan, and reopen sprints.<br>Available types: <b>ZohoSprints.sprints.READ</b> <b>ZohoSprints.sprints.CREATE</b> <b>ZohoSprints.sprints.UPDATE</b> <b>ZohoSprints.sprints.DELETE</b>"
											},
											{
												"name" : "items",
												"desc" : "Access all the item related API's like tags, comments, links.<br>Available types: <b>ZohoSprints.items.READ</b> <b>ZohoSprints.items.CREATE</b> <b>ZohoSprints.items.UPDATE</b> <b>ZohoSprints.items.DELETE</b>"
											},
											{
												"name" : "projectsettings",
												"desc" : "Access the API's related to project settings like item fields, item types, priority types, status types.<br>Available types: <b>ZohoSprints.projectsettings.READ</b> <b>ZohoSprints.projectsettings.CREATE</b> <b>ZohoSprints.projectsettings.UPDATE</b> <b>ZohoSprints.projectsettings.DELETE</b>"
											},
											{
												"name" : "webhook",
												"desc" : "Access all the webhook related API's like business rules, params, modules, etc.<br>Available types: <b>ZohoSprints.webhook.READ</b> <b>ZohoSprints.webhook.CREATE</b> <b>ZohoSprints.webhook.UPDATE</b> <b>ZohoSprints.webhook.DELETE</b>"
											},
											{
												"name" : "meetings",
												"desc" : "Access all the meetings related API's like sprint meetings, meeting comments, other meeting details. <br>Available types: <b>ZohoSprints.meetings.READ</b> <b>ZohoSprints.meetings.CREATE</b> <b>ZohoSprints.meetings.UPDATE</b> <b>ZohoSprints.meetings.DELETE</b>"
											},
											{
												"name" : "timesheet",
												"desc" : "Access all the timesheet related API's like fetching log hours, approve, delete, add, and update log hours.<br>Available types: <b>ZohoSprints.timesheet.READ</b> <b>ZohoSprints.timesheet.CREATE</b> <b>ZohoSprints.timesheet.UPDATE</b> <b>ZohoSprints.timesheet.DELETE</b>"
											},
											{
												"name" : "release",
												"desc" : "Access release related API's like release status and release details.<br>Available types: <b>ZohoSprints.release.READ</b> <b>ZohoSprints.release.CREATE</b> <b>ZohoSprints.release.UPDATE</b> <b>ZohoSprints.release.DELETE</b>"
											},
											{
												"name" : "teamusers",
												"desc" : "Access users related API's like team user and project user details.<br>Available types: <b>ZohoSprints.teamusers.READ</b> <b>ZohoSprints.teamusers.CREATE</b> <b>ZohoSprints.teamusers.UPDATE</b> <b>ZohoSprints.teamusers.DELETE</b>"
											}
									],
									"class" : "table"
								}
							} ]
						},
						{
							"name" : "API Call Limit",
							"desc" : "Sprints API calls are restricted to 30 calls / minute in order to provide seamless service to all our users."
						},
						{
							"name" : "API Collection",
							"desc" : "To try out our API, you can use the Postman, a REST client. You can download our API collection and give it a swing. Just click the button below.<br><br><div class='postman-run-button' data-postman-action='collection/import' data-postman-var-1='c56613f6a5142348c313'></div>"
						},
						{
							"name" : "Subscribe",
							"desc" : "We recommend you to check the API documentation periodically for updates. If you wish to receive notifications for major API changes, please fill <a class=\"creatorform\" >this</a> form and register with us. Feel free to send your queries to <a href=\"mailto:support@zohosprints.com\"> support@zohosprints.com </a> anytime." 
						} ]
			},
			{
				"tabName" : "Teams",
				"tabValues" : [
						{
							"name" : "Teams",
							"desc" : "In Zoho Sprints, your business runs on an entity called a \"Team\". If you run multiple firms, you create multiple teams in Sprints and get them going."
						},
						{
							"name" : "Get all teams",
							"desc" : "Fetch the list of all the teams in which you are associated.",
							"scope" : "ZohoSprints.teams.READ",
							"method" : "GET",
							"url" : "/teams/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/teams/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"defaultPortalId":"","myTeamId":"6*******4","portals":[{"teamName":"z****r","isShowTeam":true,"orgName":"z****r","portalOwner":"6*******7","type":0,"zsoid":"6*******4"}],"status":"success"}'
							} ]
						},
						{
							"name" : "Get team settings",
							"desc" : "Fetch the settings of a specific team.",
							"scope" : "ZohoSprints.teams.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/settings/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/settings/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"portalType":0,"showUserEmail": 1,"teamName":"z****r","dateFormat":"dd/MMM/yyyy","planMonth": "January","isEnterprisePlan":false,"totalDiskSpace":"107374182400","isAPIEnabled":1,"strictScrum":false,"isTrialPlan":false,"msofficeStatus":"NOT_INTEGRATED","isMobile":false,"isGViewAvailable":true,"isSprintsTrial":false,"zprojectsIntegStatus":"NOT_INTEGRATED","gappsStatus":"NOT_INTEGRATED","timezone":"Asia/Calcutta","isCopyPasteAvailable":true,"defaultGroupId":"579000000002033","planName":"Basic","pullFromBacklog":true,"timeSheetWithApproval":false,"orgId":"579000000002001","adminDisplayName":"H***n C*****s","accountStatus":1,"timer":true,"weekEnds":[],"weekStart":1,"planId":"579000000002031","freeUserCount":5,"anyuserId":"579000000002005","lastViewSetting":{"projview":0,"teamexplore":"3"},"occupied":"0 MB","botuserId":"579000000002007","planYear":2017,"occupiedbytes":"47640","businessStart":0,"webAddress":"","businessHours":1440,"tsheetApprovalMode":2,"timeSheetBillable":0,"helpstatus":{"allprojects":1,"burndown":1,"planmode":1,"createproject":1,"sprintboard":1,"statussetting":1,"velocity":1,"burnup":1,"usersetting":1,"cumulativechart":1,"timesheet":1,"feed":1,"userpagehelp":1,"meetinghelp":1,"dashboard":1,"projectteam":1},"emailCharset":"UTF-8","parallelSprints":true,"timeSheetBillable_enabled":false,"planNo":1,"userCount":15,"totalDiskspace_Readable":"100 GB","themeSetting":1,"allowedbytes":"107374182400","timeFormat":"hh:mm aaa","adminuserId":"579000000002003","isFreePlan":false,"adminzuid":"6*******7","businessEnd":1440,"status":"success"}'
							} ]
						},
						{
							"name" : "Get all link types",
							"desc" : "Fetch the default and custom link types of a specific team.",
							"scope" : "ZohoSprints.teams.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/linktype/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/linktype/?action=getlinktype \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemlinktypeIds":["1026000000064001","1026000000064003","1026000000064005","1026000000064007","1026000000064009","1026000000064011"],"itemlinktypeJObj":{"1026000000064007":["1026000000064007","1026000000003001","za.linkitem.relates","za.linkitem.isrelates","za.linkitem.descrelate",4,"3","1026000000003007","2019-09-23T11:15:18.454Z","2019-09-23T11:15:18.454Z",0],"1026000000064009":["1026000000064009","1026000000003001","za.linkitem.depends","za.linkitem.isdependent","za.linkitem.descdepends",5,"4","1026000000003007","2019-09-23T11:15:18.454Z","2019-09-23T11:15:18.454Z",0],"1026000000064003":["1026000000064003","1026000000003001","za.linkitem.reference","za.linkitem.isreference","za.linkitem.descreference",2,"1","1026000000003007","2019-09-23T11:15:18.454Z","2019-09-23T11:15:18.454Z",0],"1026000000064005":["1026000000064005","1026000000003001","za.linkitem.impacts","za.linkitem.isimpacted","za.linkitem.descimpacts",3,"2","1026000000003007","2019-09-23T11:15:18.454Z","2019-09-23T11:15:18.454Z",0],"1026000000064011":["1026000000064011","1026000000003001","za.linkitem.hasbug","za.linkitem.isbugof","za.linkitem.descbug",6,"5","1026000000003007","2019-09-23T11:15:18.454Z","2019-09-23T11:15:18.454Z",0],"1026000000064001":["1026000000064001","1026000000003001","za.linkitem.duplicate","za.linkitem.isduplicate","za.linkitem.descduplicate",1,"0","1026000000003007","2019-09-23T11:15:18.454Z","2019-09-23T11:15:18.454Z",0]},"itemlinktype_prop":{"sequence":6,"linkTypeId":0,"createdBy":7,"createdTime":8,"linkType":5,"lastUpdatedTime":9,"reverseLinkName":3,"linkDesc":4,"addedVia":10,"orgId":1,"linkName":2},"hasLinkTypeAddPermission":true,"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>getlinktype</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]	
						},
						{
							"name" : "Get all tags",
							"desc" : "Fetch all the custom tags in your team.",
							"scope" : "ZohoSprints.teams.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/tags/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/tags/?action=data&index=1&range=1000 \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":false,"hasEditPermission":true,"ItemTagCount":25,"zsTagJObj":{"8591000000074007":["8591000000074007","Content","#fa335c","8591000000002003"],"8591000000074017":["8591000000074017","Research","#812c3f","8591000000002003"]},"zsTag_prop":{"tagId":0,"createdBy":3,"colorCode":2,"tagName":1},"zsTagIds":["8591000000074007","8591000000074017"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : ""
											},
											{
												"name" : "index",
												"type" : "Long",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "Long",
												"desc" : "No. of records that have to be listed."
											},
											{
												"name" : "tagIdarr",
												"type" : "JSONArray",
												"desc" : "Pass the tag IDs to this param to fetch the details of particular tags."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Get global log hours",
							"desc" : "Fetch all the details of the log hours across projects.",
							"scope" : "ZohoSprints.teams.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/timesheet/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/timesheet/?action=orgitemlogs&viewtype=0&index=1&range=50 \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"logIds":["8591000000076003"],"projPrefix":{"8591000000002053":"SP-"},"logTimers":{},"projItemType_prop":{"itemTypeImage":3,"projItemTypeId":0,"itemTypeName":5,"itemTypeId":4,"baseType":2},"hasData":true,"logJObj":{"8591000000076003":["8591000000076003","8591000000003477",2,1,"2019-10-30T18:29:59.999Z","3600000","","8591000000002003","8591000000002003","8591000000002003","","","84","Seasonal offers are not included after the payment.","0","8591000000002077","8591000000007247","Payments",2,"7","8591000000002053","Payments project","1"]},"userDisplayName":{"8591000000002003":"*o****lk**r*"},"hasNext":false,"projItemTypeJObj":{"8591000000002077":["8591000000002077","8591000000002017",2,"2","8591000000002017","Story"]},"nextIndex":51,"HOURS":{"TOTAL":3600000,"BILLABLE":3600000,"UNBILLABLE":0},"log_prop":{"approveType":2,"projId":20,"Owner":7,"logDate":4,"addedBy":9,"projName":21,"projNo":22,"approvedBy":8,"logNotes":10,"itemNo":12,"logTime":5,"itemId":1,"sprintId":16,"itemName":13,"depth":14,"tClockId":6,"sprintType":18,"rejectNotes":11,"projItemTypeId":15,"sprintName":17,"billableType":3,"tLogId":0,"sprintNo":19},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>orgitemlogs</b>",
												"isrequired" : ""
											},
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed."
											},
											{
												"name" : "viewtype",
												"type" : "int",
												"desc" : "Get loghours based on 'team view' or 'my view' and view them.",
												"regex" : "<ul><li>0 - Team View</li><li>1 - My View</li></ul>"
											},
											{
												"name" : "filter",
												"type" : "JSONObject",
												"desc" : "Parameters that are rendered in the standard format (JSON, XML, etc. or name = value).",
												"subparamanchor" : "Show key-value pairs",
												"subparams" : {
													"data" : [
													{
														"name" : "projectIds",
														"type" : "JSONArray",
														"desc" : "Pass projectIds to look for log hours of those projects."
													},
													{
														"name" : "assignee",
														"type" : "JSONArray",
														"desc" : "Pass user IDs to view loghours of specific users."
													},
													{
														"name" : "sprinttype",
														"type" : "JSONArray",
														"desc" : "Specify type of sprint."
													},
													{ 
														"name" : "apptype",
														"type" : "JSONArray",
														"desc" : "Specify approval type.",
														"regex" : "<ul><li>0 - Pending</li><li>1 - Unapproved</li><li>2 - Approved</li></ul>"
													},
													{ 
														"name" : "billtype",
														"type" : "JSONArray",
														"desc" : "Specify billable type.",
														"regex" : "<ul><li>0 - Non Billable</li><li>1 - Billable</li></ul>"
													},
													{
														"name" : "startdate",
														"type" : "JSONArray",
														"regex" : "Allowed values: <ul><li>today</li><li>yesterday</li><li>tomorrow</li><li>thisweek</li><li>thismonth</li><li>withoutdue</li><ul>",
														"desc" : "Start date of an item."
													},
													{
														"name" : "enddate",
														"type" : "JSONArray",
														"regex" : "Allowed values: <ul><li>today</li><li>yesterday</li><li>tomorrow</li><li>thisweek</li><li>thismonth</li><li>withoutdue</li><ul>",
														"desc" : "End date of an item."
													},
													{ 
														"name" : "logdate",
														"type" : "JSONArray",
														"desc" : "Date on which the time logs should be listed.",
														"regex" : "Allowed values: <ul><li>today</li><li>thisweek</li><li>thismonth</li><ul>"
													},
													{
														"name" : "createdon",
														"type" : "JSONArray",
														"desc" : "Date on which the item is created.",
														"regex" : "Allowed values: <ul><li>today</li><li>yesterday</li><li>thisweek</li><li>thismonth</li><li>lastweek</li><li>lastmonth</li><ul>"
 													},
 													{
 														"name" : "completedon",
 														"type" : "JSONArray",
 														"desc" : "Date on which the item is completed.",
 														"regex" : "Allowed values: <ul><li>today</li><li>yesterday</li><li>thisweek</li><li>thismonth</li><li>lastweek</li><li>lastmonth</li><ul>"
 													},
 													{
 														"name" : "duration",
 														"type" : "JSONArray",
 														"desc" : "Duration of an item.",
 														"regex" : "Allowed values: <ul><li>lessthanoneday</li><li>lessthantwoday</li><li>greaterthantwoday</li><li>unestimate</li><ul>"
 													} ],
													"class" : "subparams"
												}
											},
											{
												"name" : "searchby",
												"type" : "String",
												"desc" : "Search items either by item ID or name.",
												"regex" : "<b>id</b> or <b>name</b>"
											},
											{
												"name" : "searchvalue",
												"type" : "String",
												"desc" : "View log hours for the work item that you specify in your search.",
												"regex" : "Example: <b>id</b> - 25  <b>name</b> - 'Seasonal'"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add company holidays",
							"desc" : "Configure holidays for your team.",
							"scope" : "ZohoSprints.teams.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/settings/holidays/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "date",
												"type" : "String",
												"desc" : "Date on which the holiday falls.",
												"isrequired" : ""
											},
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the holiday.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/settings/holidays/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'date=2017-12-25' \\--data-urlencode 'name=Christmas'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"id":"579000000022001","status":"success"}'
							} ]
						},
						{ 
							"name" : "Add link type",
							"desc" : "Define the link and back link names and create link types for your team.",
							"scope" : "ZohoSprints.teams.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/linktype/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/linktype/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=addlinktype' \\--data-urlencode 'linktypename=Blocks' \\--data-urlencode 'revlinktypename=Is blocked by'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemlinktypeIds":["1026000000101025"],"itemlinktypeJObj":{"1026000000101025":["1026000000101025","1026000000003001","Blocks","Is blocked by","",0,"","","1026000000003003","2019-10-25T05:41:31.321Z","2019-10-25T05:41:31.321Z",0]},"itemlinktype_prop":{"linkTypeId":0,"linkCriteria":6,"createdBy":8,"linkPattern":7,"createdTime":9,"linkType":5,"lastUpdatedTime":10,"reverseLinkName":3,"linkDesc":4,"addedVia":11,"orgId":1,"linkName":2},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
											"name" : "action",
											"type" : "String",
											"desc" : "Set value as <b>addlinktype</b>",
											"isrequired" : ""
											},
											{
												"name" : "linktypename",
												"type" : "String",
												"desc" : "Specify the link name. Link name is the specific action that you define to your linking.",
												"isrequired" : ""
											},
											{
												"name" : "revlinktypename",
												"type" : "String",
												"desc" : "Specify the back link name. Back link name is the reverse link that you define to your linking.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add custom tag",
							"desc" : "Create custom tags and categorize a particular group of work items in your backlog or sprint.",
							"scope" : "ZohoSprints.teams.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/tag/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>createtag</b>",
												"isrequired" : ""
											},
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name that you define to your tag.",
												"isrequired" : ""
											},
											{
												"name" : "color",
												"type" : "Colorcode",
												"desc" : "Color code that you define to your tag.",
												"regex" : "<b>(HEXCODE format)</b><br>Example : #3CB371"
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/tag/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=createtag' \\--data-urlencode 'name=Automation' \\--data-urlencode 'color=#3CB371'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"zsTagJObj":{"8591000000074057":["8591000000074057","Automation","#3CB371","8591000000002003"]},"zsTag_prop":{"tagId":0,"createdBy":3,"colorCode":2,"tagName":1},"zsTagIds":["8591000000074057"],"status":"success"}'
							} ]
						},
						{
							"name" : "Update link type",
							"desc" : "Modify the link and back link names to update the custom link type.<br><span class=\"note\"><span>Note : </span>You cannot edit the link and back link names for the default link types.</span>",
							"scope" : "ZohoSprints.teams.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/linktype/{linktypeId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/linktype/1026000000101025/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'linktypename=Blocks' \\--data-urlencode 'revlinktypename=Is Blocked by'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "linktypename",
												"type" : "String",
												"desc" : "Modify the link name to update the existing link type."
											},
											{
												"name" : "revlinktypename",
												"type" : "String",
												"desc" : "Modify the back link name to update the existing link type."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update custom tag",
							"desc" : "Modify the tag name and color.",
							"scope" : "ZohoSprints.teams.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/tag/{tagId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/tag/8591000000074057/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=edittag' \\--data-urlencode 'name=Features' \\--data-urlencode 'color=#ffc500'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"zsTagJObj":{"8591000000074057":["8591000000074057","Features","#ffc500","8591000000002003"]},"zsTag_prop":{"tagId":0,"createdBy":3,"colorCode":2,"tagName":1},"zsTagIds":["8591000000074057"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>edittag</b>",
												"isrequired" : ""
											},
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Specify the new name of your tag.",
												"isrequired" : ""		
											},
											{
												"name" : "color",
												"type" : "Colorcode",
												"desc" : "Specify the new color code for your tag.",
												"regex" : "<b>(HEXCODE format)</b><br>Example : #ffc500"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Delete link type",
							"desc" : "Delete the custom link type created in your team.",
							"scope" : "ZohoSprints.teams.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/linktype/{linktypeId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/linktype/1026000000101025/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
						},
						{
							"name" : "Delete custom tag",
							"desc" : "Delete the custom tag created in your team.",
							"scope" : "ZohoSprints.teams.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/tag/{tagId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/tag/8591000000074097/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"associateTagIds":[],"status":"success"}'
							} ]
						} ]
			},
			{
				"tabName" : "Projects",
				"tabValues" : [
						{
							"name" : "Projects",
							"desc" : "Any accomplishable piece of work can be termed as a project in Zoho Sprints. Every team can have a set of projects. Typically, a project is a subset of a team.",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/manage-project"
						},
						{
							"name" : "Get all projects",
							"desc" : "Fetch the list of all the projects that are associated with a specific team.<br><span class=\"note\"><span>Note :</span> The projects in which only you are associated will be listed.</span>",
							"scope" : "ZohoSprints.projects.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>allprojects</b>",
												"isrequired" : ""
											},
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired" : ""
											},
											{
												"name" : "viewby",
												"type" : "int",
												"desc" : "Group projects based on different categories and view them.",
												"regex" : "<ul><li>0 - All</li><li>1 - Favorites</li><li>2 - Group</li><li>3 - Owner</li></ul>"
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/?action=allprojects&index=1&range=10' \\ -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":false,"permission_prop":{"hasEditPermission":0,"hasDelPermission":1},"activeProjCount":2,"landingPage":"backlog","userDisplayName":{"579000000002003":"H***n C*****s"},"hasAddPermission":true,"hasAddPermission_template":true,"projStatus":1,"projectIds":["579000000062001","579000000069013"],"canViewArchive":true,"projectLimitExceed":false,"viewBy":2,"forFirstTime":true,"projectJObj":{"579000000062001":["Online Shopping - Demo Project","18","2017-07-31T18:30:00.000Z","2017-11-29T18:30:00.000Z",0,"579000000002003","579000000002003","18",[1],"579000000002033","Ungrouped Projects","579000000062029"],"579000000069013":["Mobile Development","20","2017-07-11T18:30:00.000Z","2017-12-30T18:30:00.000Z",0,"579000000002003","579000000002003","20",[1],"579000000002033","Ungrouped Projects","579000000069041"]},"project_prop":{"owner":5,"sequence":7,"groupName":10,"endDate":3,"createdBy":6,"projName":0,"projNo":1,"estimationType":4,"groupId":9,"favouriteType":8,"startDate":2,"workflowId":11},"canViewActive":true,"hasPermisison_manageProjGroup":true,"hasReorderPermission":true,"prefixObj":{"579000000062001":"SP","579000000069013":"H7"},"permissionJObj":{"579000000062001":[true,true],"579000000069013":[true,true]},"status":"success"}'
							} ]
						},
						{
							"name" : "Get project groups",
							"desc" : "Fetch all the project groups available in a team.",
							"scope" : "ZohoSprints.projectgroups.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projectgroups/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projectgroups/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"groupIds":["1736000000015029","1736000000003041"],"groupJObj":{"1736000000003041":["Ungrouped Projects",true],"1736000000015029":["Marketing",false]},"hasPermisison_manageProjGroup":true,"group_prop":{"groupName":0,"isDefault":1},"status":"success"}'
							} ]
						},
						{
							"name" : "Get project backlog",
							"desc" : "Fetch the project backlog of a specfic project.",
							"scope" : "ZohoSprints.projects.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>getbacklog</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/?action=getbacklog' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"backlogId":579000000062053,"status":"success"}'
							} ]
						},
						{
							"name" : "Get project details",
							"desc" : "Fetch the details of a specific project.",
							"scope" : "ZohoSprints.projects.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>details</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/?action=details' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"projectJObj":{"579000000062001":["Online Shopping - Demo Project",1,"18","579000000002003","2017-07-31T18:30:00.000Z","2017-11-29T18:30:00.000Z","579000000002003",0,"579000000002033","579000000062029"]},"project_prop":{"owner":3,"endDate":5,"createdBy":6,"projName":0,"projNo":2,"estimationType":7,"groupId":8,"startDate":4,"status":1,"workflowId":9},"prefix":"SP","projectIds":["579000000062001"],"isStrictScrum":true,"status":"success"}'
							} ]
						},
						{
							"name" : "Create project",
							"desc" : "Create a new project.",
							"scope" : "ZohoSprints.projects.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the project.",
												"isrequired" : ""
											},
											{
												"name" : "desc",
												"type" : "String",
												"desc" : "Detailed overview of the project."
											},
											{
												"name" : "owner",
												"type" : "Long",
												"desc" : "User ID of the manager who is assigned to the project.",
												"isrequired" : ""
											},
											{
												"name" : "projgroup",
												"type" : "Long",
												"desc" : "ID of the project group to which this project belongs.",
												"isrequired" : ""
											},
											{
												"name" : "itemlayoutid",
												"type" : "Long",
												"desc" : "ID of the layout to which this project to be associated.",
												"isrequired" : ""
											},
											{
												"name" : "prefix",
												"type" : "String",
												"desc" : "Project prefix. It must not exceed 3 characters.",
												"isrequired" : ""
											},
											{
												"name" : "estimationtype",
												"type" : "int",
												"desc" : "Map an estimation type for your project.",
												"regex" : "<ul><li>0 - Fibanacci</li><li>1 - Custom</li></ul>",
												"isrequired" : ""
											},
											{
												"name" : "startdate",
												"type" : "String",
												"desc" : "Date on which the project is expected to start.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "enddate",
												"type" : "String",
												"desc" : "Tentative end date of the project.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "pointsarr",
												"type" : "JSONArray",
												"desc" : "If the estimation type is \"custom\", this param is mandatory. A maximum of 15 estimation points can only be set."
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Online Shopping - Demo Project' \\--data-urlencode 'desc=' \\--data-urlencode 'owner=579000000002003' \\--data-urlencode 'projgroup=579000000002033' \\--data-urlencode 'itemlayoutid=1026000000026003' \\--data-urlencode 'prefix=SP' \\--data-urlencode 'estimationtype=0' \\--data-urlencode 'startdate=2017-07-31T18:30:00+05:30' \\--data-urlencode 'enddate=2017-11-29T18:30:00+05:30' \\--data-urlencode 'pointsarr='"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"projId":"579000000062001","sequence":18,"projName":"Online Shopping - Demo Project","projNo":18,"prefix":"SP","status":"success"}'
							} ]
							
						},
						{
							"name" : "Update project",
							"desc" : "Update a specific project.",
							"scope" : "ZohoSprints.projects.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Online Shopping - Demo Project' \\--data-urlencode 'status=1' \\--data-urlencode 'projgroup=579000000002033' \\--data-urlencode 'owner=579000000002003' \\--data-urlencode 'startdate=2017-11-01T18:30:00+05:30' \\--data-urlencode 'enddate=2017-11-30T18:30:00+05:30'"

							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the project."
											},
											{
												"name" : "status",
												"type" : "int",
												"desc" : "Status of the project to which it has to be moved."
											},
											{
												"name" : "projgroup",
												"type" : "Long",
												"desc" : "ID of the project group to which this project belongs."
											},
											{
												"name" : "owner",
												"type" : "Long",
												"desc" : "User ID of the manager who is assigned to the project."
											},
											{
												"name" : "startdate",
												"type" : "String",
												"desc" : "Date on which the project is expected to start.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "enddate",
												"type" : "String",
												"desc" : "Tentative end date of the project.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Delete project",
							"desc" : "Delete a specific project.",
							"scope" : "ZohoSprints.projects.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						} ]
			},
			{
				"tabName" : "Epic",
				"tabValues" : [
				        {
				        	"name" : "Epic",
				        	"desc" : "An epic is a large piece of work that comprises multiple user stories and sprints. When a huge product has to be shipped, it can be broken down into epics, and further down into sprints and work items. In Zoho Sprints, you can manage work items across relevant sprints by associating them to an epic and drive them to completion.",
				        	"exploreurl" : "https://help.zoho.com/portal/kb/articles/epic"
				        },
				        {
				        	"name" : "Get all epics",
				        	"desc" : "Fetch the list of all the epics present inside a specific project.",
				        	"scope" : "ZohoSprints.epic.READ",
				        	"method" : "Get",
				        	"url" : "/team/{teamId}/projects/{projectId}/epic/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/epic/?action=data&index=1&range=10' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":false,"epicJObj":{"1549000000009005":["Epic module development","#0064ca",6,"1","1549000000003003",0,"1549000000003003","2018-04-05T11:15:38.846Z",0],"1549000000009379":["Integrations","#f17f23",3,"5","1549000000003003",0,"1549000000003003","2018-04-09T06:46:12.476Z",0],"1549000000009387":["Roles and permissions","#815433",5,"7","1549000000003003",0,"1549000000003003","2018-04-09T06:47:50.245Z",0],"1549000000009375":["Mobile application","#4fc0e8",2,"4","1549000000003003",0,"1549000000003003","2018-04-09T06:46:03.546Z",0]},"userDisplayName":{"1549000000003003":"H***n C****s"},"epicIds":["1549000000009005","1549000000009387","1549000000009379","1549000000009375"],"epic_prop":{"owner":4,"sequence":2,"epicNo":3,"epicName":0,"createdBy":6,"epicStatus":5,"epicType":8,"createdTime":7,"colorCode":1},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									        {
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : ""
											},
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed."
											}
									],
									"class" : "params"
								}
							} ]
				        },
				        {
				        	"name" : "Get associated sprints",
				        	"desc" : "Fetch the list of all the sprints associated to a specific epic.",
				        	"scope" : "ZohoSprints.epic.READ",
				        	"method" : "Get",
				        	"url" : "/team/{teamId}/projects/{projectId}/epic/{epicId}/sprints/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/epic/1549000000009005/sprints/?index=1&range=10' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":false,"sprintIds":["1549000000009471","1549000000009103","1549000000009099"],"sprint_prop":{"scrumMaster": 2,"sprintType":3,"sprintName":0,"sprintNo":1},"sprintJObj":{"1549000000009103":["Reordering epics","2","",2],"1549000000009099":["Basic functionalities","1","",3],"1549000000009471":["Creating epic","4","",2]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
				        },
				        {
				        	"name" : "Get associated items",
				        	"desc" : "Fetch the list of all the work items associated to a specific epic.",
				        	"scope" : "ZohoSprints.epic.READ",
				        	"method" : "Get",
				        	"url" : "/team/{teamId}/projects/{projectId}/epic/{epicId}/item/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/epic/1549000000009005/item/?action=boarditems&index=1&range=10&sprintidarr=%5B%221549000000009103%22%5D' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"item_prop":{"endDate":7,"description":1,"isNotesAdded":10,"itemNo":2,"ownerId":29,"addedVia":20,"leftPosition":8,"points":15,"duration":4,"itemName":0,"createdTime":19,"isIntegrated":21,"rightPosition":9,"rootItem":24,"isDocsAdded":12,"projPriorityId":27,"isParent":11,"completedDate":18,"sequence":13,"sprintId":22,"depth":5,"itemStatusSeq":14,"statusId":25,"epicId":28,"createdBy":3,"parentItem":23,"tagCount":16,"projItemTypeId":26,"startDate":6,"completedBy":17},"sprintvsItem":{"1549000000009103":{"next":false,"itemIds":["1549000000009195","1549000000009231"],"itemJObj":{"1549000000009231":["Page tour","","5","4801000000003003","-1","0","-1","-1",1,2,false,false,false,"1","1",0,0,"","-1","2019-12-16T09:39:12.210Z",0,"0","4801000000005027","","","4801000000003687","4801000000003875","4801000000003863","4801000000003951",["4801000000003005"]],"1549000000009195":["Add reorder button next to epic creation button","","5","4801000000003003","-1","0","-1","-1",1,2,false,false,false,"1","1",0,0,"","-1","2019-12-16T09:39:12.210Z",0,"0","4801000000005027","","","4801000000003687","4801000000003875","4801000000003863","4801000000003951",["4801000000003005"]]},"integObj": {"1549000000009195": {"GOOGLE_EVENT": false,"ZOHO_PROJECTS_TASK": false,"BITBUCKET": false,"OUTLOOK_TASK": false,"GITHUB": false,"GOOGLE_TASK": false,"ZOHO_DESK": false,"OUTLOOK_EVENT": false,"GITLAB": false},"1549000000009231": {"GOOGLE_EVENT": false,"ZOHO_PROJECTS_TASK": false,"BITBUCKET": false,"OUTLOOK_TASK": false,"GITHUB": false,"GOOGLE_TASK": false,"ZOHO_DESK": false,"OUTLOOK_EVENT": false,"GITLAB": false}},"subItemCount":{"1549000000009183":4}}},"permission_prop":{"hasEditPermission":2,"fieldPerm_Status":4,"hasDeletePermission":3,"hasCommentAddPermission": 5,"isMyTask":0,"isUnassigned":1},"userDisplayName":{"1549000000003005":"Unassigned"},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									        {
									        	"name" : "action",
									        	"type" : "String",
									        	"desc" : "Set value as <b>boarditems</b>",
									        	"isrequired" : ""
									        },
									        {
									        	"name" : "sprintidarr",
									        	"type" : "JSONArray",
									        	"desc" : "IDs of all the sprints with which this epic is associated.", 
									        	"isrequired" : ""
									        },
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
				        },
				        {
				        	"name" : "Create epic",
				        	"desc" : "Create an epic in a specific project.",
				        	"scope" : "ZohoSprints.epic.CREATE",
				        	"method" : "Post",
				        	"url" : "/team/{teamId}/projects/{projectId}/epic/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl --data '{name: \"Epic feature development\", owner: 1736000000003003}' https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/epic/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"epicJObj":{"1736000000015013":["Epic feature development","#259e92",6,"6","1736000000003003",0,"1736000000003003","2018-04-11T10:28:13.940Z","",0,""]},"epicIds":["1736000000015013"],"epic_prop":{"owner":4,"epicType": 8,"sequence":2,"epicNo":3,"epicName":0,"createdBy":6,"epicStatus":5,"createdTime":7,"description":9,"colorCode":1},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									        {
									        	"name" : "name",
									        	"type" : "String",
									        	"desc" : "Name of the epic.",
									        	"isrequired" : ""
									        },
									        {
									        	"name" : "desc",
									        	"type" : "String",
									        	"desc" : "Short description of the epic."
									        },
									        {
									        	"name" : "owner",
									        	"type" : "Long",
									        	"desc" : "User who will manage the epic", 
									        	"isrequired" : ""
									        }
									],
									"class" : "params"
								}
							} ]
				        },
				        {
				        	"name" : "Associate items with epic",
				        	"desc" : "Associate one or more work items with a specific epic in a specific project.",
				        	"scope" : "ZohoSprints.epic.UPDATE",
				        	"method" : "Post",
				        	"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/item/associate/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/sprints/1736000000010001/item/associate/   -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'epicid=1736000000015103' \\--data-urlencode 'rootitemidarr=[\"1736000000003109\",\"1736000000003111\",\"1736000000003113\"]'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"updatedItemIds":["1736000000003109","1736000000003111","1736000000003113"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									        {
									        	"name" : "epicid",
									        	"type" : "Long",
									        	"desc" : "ID of the relevant epic which is to be associated with items.",
									        	"isrequired" : ""
									        },
									        {
									        	"name" : "rootitemidarr",
									        	"type" : "JSONArray",
									        	"desc" : "Parent IDs of the work items that have to be associated.",
									        	"isrequired" : ""
									        }
									],
									"class" : "params"
								}
							} ]
				        },
				        {
				        	"name" : "Update epic",
				        	"desc" : "Modify an epic in a specific project.",
				        	"scope" : "ZohoSprints.epic.UPDATE",
				        	"method" : "Post",
				        	"url" : "/team/{teamId}/projects/{projectId}/epic/{epicId}/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl --data '{name: \"Epic module development\", owner: 1736000000003003}' https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/epic/1736000000015013/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"epicJObj":{"1736000000015013":["Epic module development","#259e92",6,"6","1736000000003003",0,"1736000000003003","2018-04-11T10:28:13.940Z",0,""]},"userDisplayName":{"1736000000003003":"H***n C****s"},"epicIds":["1736000000015013"],"epic_prop":{"owner":4,"sequence":2,"epicNo":3,"epicName":0,"epicType": 8,"createdBy":6,"epicStatus":5,"createdTime":7,"description":9,"colorCode":1},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									        {
									        	"name" : "name",
									        	"type" : "String",
									        	"desc" : "Name of the epic."
									        },
									        {
									        	"name" : "desc",
									        	"type" : "String",
									        	"desc" : "Short description of the epic."
									        },
									        {
									        	"name" : "owner",
									        	"type" : "Long",
									        	"desc" : "User who will manage the epic" 
									        }
									],
									"class" : "params"
								}
							} ]
				        },
				        {
				        	"name" : "Delete epic",
				        	"desc" : "Delete a specific epic in a specific project.",
				        	"scope" : "ZohoSprints.epic.DELETE",
				        	"method" : "Delete",
				        	"url" : "/team/{teamId}/projects/{projectId}/epic/{epicId}/",
				        	"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094001/epic/1736000000015013/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
				        } ]
			},
			{
				"tabName" : "Sprints",
				"tabValues" : [
						{
							"name" : "Sprints",
							"desc" : "Break down a project into smaller units called \"sprints\". Typically, a sprint lasts for 2 - 4 weeks.",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/manage-sprints"
						},
						{
							"name" : "Get sprints",
							"desc" : "Fetch the list of all the sprints that are associated with a specific project.<br><span class=\"note\"><span>Note:</span> The sprints in which only you are associated will be listed.</span>",
							"scope" : "ZohoSprints.sprints.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/?action=alldata&type=%5B2%5D' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"sprintIds":["579000000062055"],"sprint_prop":{"canceledOn": 8,"scrumMaster": 11,"endDate": 2,"canceledBy": 9,"duration": 4,"createdBy": 6,"completedOn": 3,"sprintType": 5,"createdTime": 7,"sprintName": 0,"startDate": 1,"workflowId": 12,"sprintNo": 10},"sprintJObj":{"579000000062055":["Payments","2020-01-08T18:30:00.000Z","2020-01-24T18:29:59.999Z","-1","15d",1,"579000000004001","2020-01-06T10:46:26.152Z","-1","","4","579000000004001","1026000000003083"]},"userDisplayName": {"579000000004001": "J**n D*e"},"next": false,"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>alldata</b>",
												"isrequired" : ""
											},
											{
												"name" : "type",
												"type" : "JSONArray",
												"regex" : "Allowed values:<ul><li>1 - Upcoming sprint</li><li>2 - Active sprint</li><li>3 - Completed sprint</li><li>4 - Canceled sprint</li></ul>"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Get sprint details",
							"desc" : "Fetch the details of a specific sprint.",
							"scope" : "ZohoSprints.sprints.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/?action=details \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"sprintIds":["579000000062055"],"sprint_prop":{"canceledOn":11,"scrumMaster":8,"endDate":4,"description":9,"duration":6,"startAfter": 10,"createdBy":2,"sprintType":1,"completedOn":12,"sprintName":0,"startedOn":5,"startDate":3,"sprintNo":7},"userDisplayName":{"579000000004001":"J**n M***h","579000000025015":"c*****s.s","579000000002003":"H***n C*****s"},"sprintJObj":{"579000000062055":["Payments",2,"579000000002003","2017-10-04T18:30:00.000Z","2017-10-21T18:29:59.999Z","-1","18d","1","579000000002003","579000000062029","Transaction Details","-1","-1"]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>details</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Get sprint comments",
							"desc" : "Fetch the comments of a specific sprint.",
							"scope" : "ZohoSprints.sprints.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/notes/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/1026000000105085/notes/?index=1&range=10' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":false,"permission_prop":{"hasEditPermission":0,"hasDeletePermission":1},"showConvertNotes":true,"userDisplayName":{"579000000002003":"St***e S**h"},"sprintnotes_prop":{"hasAttach":6,"notes":0,"updatedBy":3,"createdBy":2,"createdTime":1,"lastUpdatedTime":4,"isRetro":5},"sprintnotesIds":["1026000000129005"],"sprintnotesJObj":{"1026000000129005":["<p>Submit all transaction details.<\/p>","2020-01-06T12:03:18.109Z","2000000000005","2000000000005","2020-01-06T12:03:18.109Z",0,0]},"permissionJObj":{"2000000006063":[true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Create sprint",
							"desc" : "Add a new sprint in your project.",
							"scope" : "ZohoSprints.sprints.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Payments' \\--data-urlencode 'description=Transaction Details' \\--data-urlencode 'startdate=2017-10-04T00:00:00+05:30' \\--data-urlencode 'enddate=2017-10-20T00:00:00+05:30' \\--data-urlencode 'scrummaster=579000000002003' \\--data-urlencode 'users=[\"579000000002003\",\"579000000004001\",\"579000000025015\"]'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"permission_prop":{"hasEditPermission":1,"hasCompletePermission":6,"hasStartPermission":7,"hasDeletePermission":2,"hasItemAddPermission":0,"hasCommentAddPermission":8,"hasReplanPermission":5,"canStartSprint":3,"hasCancelPermission":4},"permissionJObj":{"1026000000129015":[true,true,true,true,false,false,false,true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the sprint.",
												"isrequired" : ""
											},
											{
												"name" : "description", 
												"type" : "String",
												"desc" : "A short description of the sprint."
											},
											{
												"name" : "startdate",
												"type" : "dateformat",
												"desc" : "Date on which the sprint starts.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "enddate",
												"type" : "dateformat",
												"desc" : "Date on which the sprint ends.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Tentative duration of the sprint.  A sprint duration cannot exceed 8 weeks when strict scrum is enabled. And if strict scrum is disabled it can last upto 30 weeks."
											},
											{
												"name" : "scrummaster",
												"type" : "Long",
												"desc" : "User ID of the scrum master."
											},
											{
												"name" : "users",
												"type" : "JSONArray",
												"desc" : "User IDs of the users who will work on the sprint."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add sprint comment",
							"desc" : "Comment on a specific sprint.",
							"scope" : "ZohoSprints.sprints.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/notes/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/notes/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Check this issue and fix ASAP in this sprint'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"ATTACHMENTS":{},"permission_prop": {"hasEditPermission": 0,"hasDeletePermission": 1},"userDisplayName":{"579000000002003":"H***n C*****s"},"sprintnotes_prop":{"hasAttach":6,"notes":0,"updatedBy":3,"createdBy":2,"createdTime":1,"lastUpdatedTime":4,"isRetro":5},"showConvertNotes": true,"sprintnotesIds":["579000000107073"],"sprintnotesJObj":{"579000000107073":["Check this issue and fix ASAP in this sprint","2017-10-14T06:02:26.738Z","579000000002003","579000000002003","2017-10-14T06:02:26.738Z",0,0]},"permissionJObj": {"581000000107015": [true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Comment that has to be added.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update sprint",
							"desc" : "Update a specific sprint.",
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Payments' \\--data-urlencode 'description=Transaction Details' \\--data-urlencode 'startdate=2017-10-04T00:00:00+05:30' \\--data-urlencode 'enddate=2017-10-21T00:00:00+05:30' \\--data-urlencode 'scrummaster=579000000002003'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the sprint."
											},
											{
												"name" : "description", 
												"type" : "String",
												"desc" : "A short description of the sprint."
											},
											{
												"name" : "startdate",
												"type" : "dateformat",
												"desc" : "Date on which the sprint starts.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "enddate",
												"type" : "dateformat",
												"desc" : "Date on which the sprint ends.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Tentative duration of the sprint.  A sprint duration cannot exceed 8 weeks when strict scrum is enabled. And if strict scrum is disabled it can last upto 30 weeks."
											},
											{
												"name" : "scrummaster",
												"type" : "Long",
												"desc" : "ID of the scrum master."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update sprint comment",
							"desc" : "Modifiy a specific sprint comment.",
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/notes/{notesId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/notes/579000000107073/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Check this bug and fix ASAP in this sprint'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"userDisplayName":{"579000000002003":"H***n C*****s"},"permission_prop": {"hasEditPermission": 0,"hasDeletePermission": 1},"sprintnotes_prop":{"hasAttach":6,"notes":0,"updatedBy":3,"createdBy":2,"createdTime":1,"lastUpdatedTime":4,"isRetro":5},"sprintnotesIds":["579000000107073"],"sprintnotesJObj":{"579000000107073":["Check this bug and fix ASAP in this sprint","2017-10-14T06:02:26.738Z","579000000002003","579000000002003","2017-10-14T06:33:04.624Z","",0]},"permissionJObj": {"581000000107015": [true,true]},"showConvertNotes": true,"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									{
										"name" : "name",
										"type" : "String",
										"desc" : "Modified sprint comment."
									}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Start sprint",
							"desc" : "Start a specific sprint.",
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/start/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/start/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							// i18n
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"STARTDATE": "2020-01-06T18:30:00.000Z","ENDDATE": "2020-03-05T18:29:59.999Z","status": "success"}'
							} ]
						},
						{
							"name" : "Complete sprint",
							"desc" : "To complete a sprint using this API, all the items in it must be in either of the following states:",
							"unorderlist" : [ "Updated to \"Closed\" status", "Moved to the backlog or another sprint" ],
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/complete/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>complete</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/complete/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=complete'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"completedDate": "2017-10-21T18:29:59.999Z","status": "success"}'
							} ]
						},
						{
							"name" : "Cancel sprint",
							"desc" : "To cancel a sprint using this API, all the items in it must be in either of the following states:",
							"unorderlist" : [ "Updated to \"Closed\" status", "Moved to the backlog or another sprint" ],
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/cancel/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>cancel</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/cancel/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=cancel'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"canceledDate": "2017-10-03T16:29:59.999Z","status": "success"}'
							} ]
						},
						{
							"name" : "Replan sprint",
							"desc" : "Replan a specific sprint.",
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/replan/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/replan/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						},
						{
							"name" : "Reopen sprint",
							"desc" : "Reopen a specific sprint.",
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/reopen/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/reopen/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						},
						{
							"name" : "Delete sprint",
							"desc" : "Delete a specific sprint.",
							"scope" : "ZohoSprints.sprints.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						},
						{
							"name" : "Delete sprint comment",
							"desc" : "Delete a specific sprint comment.",
							"scope" : "ZohoSprints.sprints.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/notes/{notesId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/notes/579000000107073/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						} ]
			},
			{
				"tabName" : "Items",
				"tabValues" : [
						{
							"name" : "Items",
							"desc" : "Create items within a sprint to bring more clarity to the kind of work that you are currently sprinting on.",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/manage-work-items"	
						},
						{
							"name" : "Get items",
							"desc" : "Fetch the list of all the items associated with a sprint.",
							"scope" : "ZohoSprints.items.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/?action=sprintitems&index=1&range=2' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":true,"item_prop":{"projPriorityId":27,"isParent":11,"endDate":7,"description":1,"isNotesAdded":10,"itemNo":2,"ownerId":29,"addedVia": 20,"leftPosition":8,"completedDate":18,"points":15,"duration":4,"sequence":13,"sprintId":22,"itemName":0,"createdTime": 19,"isIntegrated": 21,"depth":5,"itemStatusSeq": 14,"statusId":25,"epicId": 28,"createdBy":3,"parentItem":23,"tagCount": 16,"projItemTypeId":26,"rightPosition":9,"rootItem":24,"startDate":6,"isDocsAdded":12,"completedBy": 17},"itemIds":["579000000062085"],"userDisplayName":{"579000000004001":"John Marsh","579000000025015":"charles.s","579000000002005":"Unassigned","579000000002003":"Helen Collins"},"itemJObj":{"579000000062087":["On click of \'Pay Now\' place an order on the database and move it to delivery site.","","15","579000000002003","2d 12h","0","-1","-1",1,2,false,false,false,"15","15",1,0,"","-1","2017-11-13T06:43:00.161Z",4,"0","579000000062055","","","579000000002027","579000000062021","579000000062011","",["579000000002003"]]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>sprintitems</b>",
												"isrequired": ""
											},
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired": ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired": ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Get item details",
							"desc" : "Fetch the details of a specific item.",
							"scope" : "ZohoSprints.items.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>details</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/?action=details' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"item_prop":{"endDate":35,"description":1,"isNotesAdded":10,"itemNo":2,"ownerId":40,"addedVia":20,"hasCheckList":22,"leftPosition":8,"points":38,"duration":39,"itemName":0,"startAfter":33,"createdTime":15,"isIntegrated":21,"rightPosition":9,"rootItem":24,"isDocsAdded":12,"projPriorityId":34,"isParent":11,"completedDate":16,"sequence":13,"sprintId":29,"depth":5,"statusId":37,"epicId":32,"createdBy":3,"parentItem":23,"projItemTypeId":31,"startDate":36,"completedBy":18},"itemIds":["579000000062089"],"userDisplayName":{"579000000011131":"Eduardo Vargas","579000000002003":"Helen Collins"},"itemJObj":{"579000000062089":["I cannot enter the credit card details. ","","21","579000000011131","9h 54m","0","-1","-1",1,2,false,false,false,"21",1,"2019-12-27T12:55:07.367Z","-1",4,"","-1",4,"0",false,"","","1026000000003021","1026000000003109","1026000000003135",["1026000000003109"],"1026000000003109","","1026000000003135","","-1","1026000000003135","-1","-1","1026000000003021",1,"9h 54m",["1026000000003109"]]},"isFreePlan": false,"status":"success"}'
							} ]
						},
						{
							"name" : "Get subitem details",
							"desc" : "Fetch the details of a specific subitem.",
							"scope" : "ZohoSprints.items.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{subitemId}/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>details</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/?action=details' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"item_prop":{"endDate":35,"description":1,"isNotesAdded":10,"itemNo":2,"ownerId":40,"addedVia":20,"hasCheckList":22,"leftPosition":8,"points":38,"duration":39,"itemName":0,"startAfter":33,"createdTime":15,"isIntegrated":21,"rightPosition":9,"rootItem":24,"isDocsAdded":12,"projPriorityId":34,"isParent":11,"completedDate":16,"sequence":13,"sprintId":29,"depth":5,"statusId":37,"epicId":32,"createdBy":3,"parentItem":23,"projItemTypeId":31,"startDate":36,"completedBy":18},"itemIds":["579000000062089"],"userDisplayName":{"579000000011131":"Eduardo Vargas","579000000002003":"Helen Collins"},"itemJObj":{"579000000062089":["Create a `Add to bag` button in every whislist. ","","21","579000000011131","9h 54m","0","-1","-1",1,2,false,false,false,"21",1,"2019-12-27T12:55:07.367Z","-1",4,"","-1",4,"0",false,"","","1026000000003021","1026000000003109","1026000000003135",["1026000000003109"],"1026000000003109","","1026000000003135","","-1","1026000000003135","-1","-1","1026000000003021",1,"9h 54m",["1026000000003109"]]},"isFreePlan": false,"status":"success"}'
							} ]
						},
						{
							"name" : "Get item comments",
							"desc" : "Fetch the comments of a specific item.",
							"scope" : "ZohoSprints.items.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/notes/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/notes/?index=1&range=2' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":true,"itemnotesJObj":{"579000000107081":["Check this bug and fix ASAP in this sprint","2017-10-14T06:42:09.676Z","579000000002003","579000000002003",0,0,"0","579000000062089","579000000107081"],"579000000102037":["Yeah sure","2017-10-15T10:12:23.157Z","579000000002003","579000000002003",0,0,"0","579000000062089","579000000102037"]},"permission_prop": {"hasEditPermission": 0,"hasDeletePermission": 1},"itemnotes_prop":{"hasAttach":4,"integList": 6,"itemId":7,"notes":0,"updatedBy":3,"createdBy":2,"createdTime":1,"itemNoteId":8,"addedVia": 5},"userDisplayName":{"579000000002003":"Helen Collins"},"isFreePlan": false,"itemnotesIds":["579000000107081","579000000102037"],"permissionJObj": {"1026000000131061": [true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired": ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired": ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Get linked items",
							"desc" : "Fetch the items linked with a specific item.",
							"scope" : "ZohoSprints.items.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/linkitem/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>fetchlinkeditems</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/linkitem/?action=fetchlinkeditems' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"workflowObj":{"1026000000003083":{"1026000000003027":{"statusType":"1","statusName":"Done","colorCode":"#259e92"},"1026000000003021":{"statusType":"2","statusName":"In progress","colorCode":"#4a7297"},"1026000000003019":{"statusType":"0","statusName":"To do","colorCode":"#fa335c"}}},"revLinkItemMap":{"1026000000003119":[1026000000065057]},"itemtypeObj":{"projItemTypeIds":["1026000000003077"],"projItemType_prop":{"itemId":3,"itemTypeImage":1,"projItemTypeId":4,"baseType":2},"projItemTypeJObj":{"1026000000003077":["1026000000003077","2",2,"1026000000003113","1026000000003077"]}},"dirLinkItemMap":{"1026000000003113":[1026000000064007]},"linktypeObj":{"itemlinktypeIds":["1026000000064007","1026000000065057"],"itemlinktypeJObj":{"1026000000064007":["1026000000064007","za.linkitem.relates","za.linkitem.isrelates",4,"1026000000003001"],"1026000000065057":["1026000000065057","Blocks","Is blocked by",0,"1026000000003001"]},"itemlinktype_prop":{"linkTypeId":0,"linkType":3,"reverseLinkName":2,"linkName":1,"orgId":4}},"itemObj":{"item_prop":{"projId":12,"projName":13,"projNo":14,"itemNo":2,"itemId":3,"sprintId":7,"itemName":1,"statusId":5,"sprintType":11,"projItemTypeId":6,"sprintName":10,"projectId":8,"workflowId":9},"itemIds":["1026000000003113","1026000000003119"],"itemJObj":{"1026000000003113":["1026000000003113","I cannot enter the credit card details.","1","1026000000003113","1026000000003091","1026000000003019","1026000000003077","1026000000003091","1026000000003053","1026000000003083","Backlog",5,"1026000000003053","Sample Project","1"],"1026000000003119":["1026000000003119","Pay Now functionality not working.","4","1026000000003119","1026000000003091","1026000000003019","1026000000003077","1026000000003091","1026000000003053","1026000000003083","Backlog",5,"1026000000003053","Sample Project","1"]}},"prefixObj":{"1026000000003053":"SP"},"status":"success"}'
							} ]
						},
						{
							"name" : "Get tags associated with item",
							"desc" : "Fetch all the tags that are associated with the item.",
							"scope" : "ZohoSprints.items.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/tags/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>itemassociatedtagIds</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/tags/?action=itemassociatedtagIds' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"associateTagIds":["8591000000074007"],"status":"success"}'
							} ]
							
						},
						{
							"name" : "Create item",
							"desc" : "Add an item to a specific sprint or the backlog.<br><span class=\"note\"><span>Note :</span> Parameters listed below are only for the default item fields. Refer Get Item Fields to fetch the parameters and values of the custom item fields. </span>",
							"exploreurl" : "https://help.zoho.com/portal/kb/zoho-sprints/custom-layouts-and-fields",
							"scope" : "ZohoSprints.items.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Pay Now functionality not working' \\--data-urlencode 'projitemtypeid=579000000062019' \\--data-urlencode 'projpriorityid=579000000062021' \\--data-urlencode 'users=[\"579000000004001\"]' \\--data-urlencode 'description=' \\--data-urlencode 'point=5' \\--data-urlencode 'startdate=2017-11-05T11:38:00+05:30' \\--data-urlencode 'enddate=2017-11-22T16:30:00+05:30'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the item.",
												"isrequired" : ""
											},
											{
												"name" : "projitemtypeid",
												"type" : "Long",
												"desc" : "ID of the preferred item type. <a class=\"anchor\" href=\"#Getitemtypes\">Refer its API</a>",
												"isrequired" : ""
											},
											{
												"name" : "projpriorityid",
												"type" : "Long",
												"desc" : "ID of the preferred priority type.  <a class=\"anchor\" href=\"#Getprioritytypes\">Refer its API</a>",
												"isrequired" : ""
											},
											{
												"name" : "epicid",
												"type" : "Long",
												"desc" : "ID of the epic with which the new item has to be mapped."
											},
											{
												"name" : "users",
												"type" : "JSONArray",
												"desc" : "User IDs of the users who will work on the item."
											},
											{
												"name" : "description",
												"type" : "String",
												"desc" : "Detailed description of the item."
											},
											{
												"name" : "point",
												"type" : "int",
												"desc" : "Estimation points set for the item.",
												"regex" : "Index of the estimation points.<br><br>Example: The index of 2 in a Fibonacci estimation type is 2 and the index of 8 will be 5."
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Duration of the item."
											},
											{
												"name" : "startdate",
												"type" : "dateformat",
												"desc" : "Start date of the item.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "enddate",
												"type" : "dateformat",
												"desc" : "End date of the item.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add item comment",
							"desc" : "Comment on a specific item.",
							"scope" : "ZohoSprints.items.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/notes/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/notes/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Check this issue and fix ASAP in this sprint'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemnotesJObj":{"579000000107087":["name=Check this issue and fix ASAP in this sprint","2017-10-14T06:42:53.046Z","579000000002003","579000000002003",0]},"itemnotes_prop":{"notes":0,"updatedBy":3,"createdBy":2,"createdTime":1,"addedVia": 4},"permission_prop": {"hasEditPermission": 0,"hasDeletePermission": 1},"userDisplayName":{"579000000002003":"H***n Collins"},"itemnotesIds":["579000000107087"],"permissionJObj": {"581000000107015": [true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Comment that has to be added.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Link items", 
							"desc" : "Link work items with similar set of goals using the default or custom link types.", 
							"scope" : "ZohoSprints.items.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/linkitem/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/linkitem/' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=linkitems' \\--data-urlencode 'linkitemobj={'directlink':['1026000000003119']}' \\--data-urlencode 'linktosprintid=1026000000003091' \\--data-urlencode 'linktoprojectid=1026000000003053' \\--data-urlencode 'linktypeid=1026000000064005'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"workflowObj":{"1026000000003083":{"1026000000003027":{"statusType":"1","statusName":"Done","colorCode":"#259e92"},"1026000000003021":{"statusType":"0","statusName":"To do","colorCode":"#fa335c"},"1026000000003019":{"statusType":"2","statusName":"In progress","colorCode":"#4a7297"}}},"linkTypeId":"1026000000064005","itemObj":{"item_prop":{"projId":12,"projName":13,"projNo":14,"itemNo":2,"itemId":3,"sprintId":6,"itemName":1,"statusId":7,"sprintType":5,"projItemTypeId":8,"sprintName":10,"projectId":9,"workflowId":11},"itemIds":["1026000000003121"],"itemJObj":{"1026000000003121":["1026000000003121","Create a `Add to bag` button in every whislist.","12","1026000000003121","1026000000003091",2,"1026000000003019","1026000000003073","1026000000003091","1026000000003053","Payments","1026000000003083","1026000000003053","Sample Project","1"]}},"status":"success"}' 
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>linkitems</b>",
												"isrequired" : ""
											},
											{
												"name" : "linkitemobj",
												"type" : "JSONObject",
												"desc" : "Parameters that are rendered in the standard format (JSON, XML, etc. or name = value).",
												"isrequired" : "",
												"subparamanchor" : "Show key-value pairs",
												"subparams" : {
													"data" : [
													{
														"name" : "directlink",
														"type" : "JSONArray",
														"desc" : "Item IDs of the items that you are about to link with the direct link name."
													},
													{
														"name" : "backlink",
														"type" : "JSONArray",
														"desc" : "Item IDs of the items that you are about to link with the reverse link name."
													} ],
													"class" : "subparams"
												}
											},
											{
												"name" : "linktosprintid",
												"type" : "Long",
												"desc" : "Sprint ID of the items to link.",
												"isrequired" : ""
											},
											{
												"name" : "linktoprojectid",
												"type" : "Long",
												"desc" : "Project ID of the items to link.",
												"isrequired" : ""
											},
											{
												"name" : "linktypeid",
												"type" : "Long",
												"desc" : "ID specific to your link type.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
							
						},
						{
							"name" : "Update item",
							"desc" : "Update a specific item.<br><span class=\"note\"><span>Note :</span> Parameters listed below are only for the default item fields. Refer Get Item Fields to fetch the parameters and values of the custom item fields. </span>",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/manage-project",
							"scope" : "ZohoSprints.items.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Pay Now functionality not working' \\--data-urlencode 'projitemtypeid=579000000062019' \\--data-urlencode 'projpriorityid=579000000062021' \\--data-urlencode 'description=' \\--data-urlencode 'point=5' \\--data-urlencode 'startdate=2017-11-05T09:00:00+05:30' \\--data-urlencode 'enddate=2017-11-06T16:30:00+05:30' \\--data-urlencode 'newusers=[\"579000000002003\"]' \\--data-urlencode 'delusers=[\"579000000004001\"]"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"duration":"1d 7h 30m","endDate":"2017-11-06T11:16:30.000Z","description":"","startDate":"2017-11-05T09:00:00.000Z","status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the item."
											},
											{
												"name" : "projitemtypeid",
												"type" : "Long",
												"desc" : "ID of the preferred item type. <a class=\"anchor\" href=\"#Getitemtypes\">Refer its API</a>"
											},
											{
												"name" : "projpriorityid",
												"type" : "Long",
												"desc" : "ID of the preferred priority type.  <a class=\"anchor\" href=\"#Getprioritytypes\">Refer its API</a>"
											},
											{
												"name" : "epicid",
												"type" : "Long",
												"desc" : "ID of the epic with which the item's mapping has to be updated."
											},
											{
												"name" : "description",
												"type" : "String",
												"desc" : "Detailed description of the item."
											},
											{
												"name" : "point",
												"type" : "int",
												"desc" : "Estimation points set for the item.",
												"regex" : "Index of the estimation points.<br><br>Example: The index of 2 in a Fibonacci estimation type is 2 and the index of 8 will be 5."
											},
											{
												"name" : "startdate",
												"type" : "dateformat",
												"desc" : "Start date of the item.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "enddate",
												"type" : "dateformat",
												"desc" : "End date of the item.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "newusers",
												"type" : "JSONArray",
												"desc" : "User IDs of the users who will work on the item."
											},
											{
												"name" : "delusers",
												"type" : "JSONArray",
												"desc" : "User IDs of the assignees that have to be deleted."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update item comment",
							"desc" : "Modify an item comment.",
							"scope" : "ZohoSprints.items.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/notes/{notesId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/notes/579000000107087/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Check this bug and fix ASAP in this sprint'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemnotesJObj":{"579000000107087":["name=Check this bug and fix ASAP in this sprint","2017-10-15T08:00:53.046Z","2017-10-14T06:42:53.046Z","579000000002003","579000000002003",0,"0",0]},"itemnotes_prop":{"notes":0,"hasAttach":5,"integList":6,"updatedBy":4,"lastUpdatedTime":2,"createdBy":3,"createdTime":1,"addedVia":7},"userDisplayName":{"579000000002003":"H***n Collins"},"itemnotesIds":["579000000107087"],"permission_prop": {"hasEditPermission": 0,"hasDeletePermission": 1},"permissionJObj": {"581000000107015": [true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									{
										"name" : "name",
										"type" : "String",
										"desc" : "Modified item comment"
									} ],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update item status",
							"desc" : "Update the status of a specific item.",
							"scope" : "ZohoSprints.items.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/item/{itemId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=updatestatus' \\--data-urlencode 'statusid=579000000002027'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemIds":["579000000067185"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>updatestatus</b>",
												"isrequired" : ""
											},
											{
												"name" : "statusid",
												"type" : "Long",
												"desc" : "The ID of the status to which the item has to be moved.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Move item",
							"desc" : "Move one or more items across projects.",
							"scope" : "ZohoSprints.items.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/bulkupdate/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/bulkupdate/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=moveitem' \\--data-urlencode 'tosprintid=1736000000015069' \\--data-urlencode 'toprojectid=1736000000015031' \\--data-urlencode 'itemidarr=[\"1736000000003117\"]'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemIds":["1736000000003117"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>moveitem</b>",
												"isrequired" : ""
											},
											{
												"name" : "itemidarr",
												"type" : "JSONArray",
												"desc" : "IDs of the work items that have to be moved.<br><br><b>Note:</b> Subitems cannot be moved separately. They can be moved along with their parent items only. Hence, we recommend you to give the parent IDs to move them across projects.",
												"isrequired" : ""
											},
											{
												"name" : "tosprintid",
												"type" : "Long",
												"desc" : "ID of the sprint to which the items have to be moved.",
												"isrequired" : ""
											},
											{
												"name" : "toprojectid",
												"type" : "Long",
												"desc" : "ID of the project in which the destination sprint is present."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update items linked",
							"desc" : "Modify the link type of the existing item linked to a different link type.<br><span class=\"note\"><span>Note : </span>If the main work item is linked with the direct link name and you tend to update it with a new link type. The link type ID param that you pass will automatically update the linked item with its corresponding link name.</span>",
							"scope" : "ZohoSprints.items.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/linkitem/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/linkitem/' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=editlinkitem' \\--data-urlencode 'linktypeid=1026000000064003' \\--data-urlencode 'oldlinktypeid=1026000000065053' \\--data-urlencode 'linktosprintid=1026000000055001' \\--data-urlencode 'linktoprojectid=1026000000003053' \\--data-urlencode 'srcitemid=1026000000065141'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>editlinkitem</b>",
												"isrequired" : ""	
											},
											{
												"name" : "destitemid",
												"type" : "Long",
												"desc" : "Pass the item ID of the linked item to this param when the item is linked with the direct link name."
											},
											{
												"name" : "srcitemid",
												"type" : "Long",
												"desc" : "Pass the item ID of the linked item to this param when the item is linked with the link name."
											},
											{
												"name" : "linktosprintid",
												"type" : "Long",
												"desc" : "Sprint ID of the linked item to update.",
												"isrequired" : ""
											},
											{
												"name" : "linktoprojectid",
												"type" : "Long",
												"desc" : "Project ID of the linked item to update.",
												"isrequired" : ""
											},
											{
												"name" : "linktypeid",
												"type" : "Long",
												"desc" : "New linktype ID about to update.",
												"isrequired" : ""
											},
											{
												"name" : "oldlinktypeid",
												"type" : "Long",
												"desc" : "Existing link type ID to which the current linking is defined.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]									
						},
						{
							"name" : "Associate or update item tag",
							"desc" : "Associate the custom tag to an item or update the existing tags associated with an item.",
							"scope" : "ZohoSprints.items.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/tags/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/tags/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=associateupdate' \\--data-urlencode 'reassociate=true' \\--data-urlencode 'newtags=['8591000000074097']'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>associateupdate</b>",
												"isrequired" : ""	
											},
											{
												"name" : "newtags",
												"type" : "JSONArray",
												"desc" : "IDs of the tags that you wish to associate with the item.<br><span class=\"note\"><span>Note: </span>Existing tag association will be removed if you fail to pass all the tag IDs that are associated with the work item.</span>"
											},
											{
												"name" : "reassociate",
												"type" : "Boolean",
												"desc" : "Set value as <b>true</b><br><span class=\"note\"><span>Note: </span>Always set this param value to 'true'.</span>",
												"isrequired" : ""	
											}
									],
									"class" : "params"
								}
							} ]
							
						},
						{
							"name" : "Delete item",
							"desc" : "Delete an item.",
							"scope" : "ZohoSprints.items.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"itemIds": ["579000000062089"],"status": "success"}'
							} ]
						},
						{
							"name" : "Delete item comment",
							"desc" : "Delete an item comment.",
							"scope" : "ZohoSprints.items.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/notes/{notesId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/notes/579000000107087/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						},
						{
							"name" : "Delink item",
							"desc" : "Delink the work items to remove the linking.",
							"scope" : "ZohoSprints.items.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/item/{itemId}/linkitem/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/item/579000000062089/linkitem/' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'linktypeid=1026000000064007' \\--data-urlencode 'linktoprojectid=1026000000003053' \\--data-urlencode 'destitemid=1026000000003121'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "linktypeid",
												"type" : "Long",
												"desc" : "Existing link type ID to which the current linking is defined.",
												"isrequired" : ""
											},
											{
												"name" : "linktoprojectid",
												"type" : "Long",
												"desc" : "Project ID of the item to be delinked.",
												"isrequired" : ""
											},
											{
												"name" : "destitemid",
												"type" : "Long",
												"desc" : "Pass the item ID of the linked item to this param when the item is linked with the direct link name."
											},
											{
												"name" : "srcitemid",
												"type" : "Long",
												"desc" : "Pass the item ID of the linked item to this param when the item is linked with the back link name."
											}
									],
									"class" : "params"
								}
							} ]
						
						} ]
			},
			{
				"tabName" : "Project Settings",
				"tabValues" : [
						{
							"name" : "Project Settings",
							"desc" : "Configure your project related information in Sprints with the following APIs.",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/project-settings"
						},
						{
							"name" : "Get item fields",
							"desc" : "Fetch the list of item fields associated with specific projects. ",
							"scope" : "ZohoSprints.projects.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>itemcfields</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/?action=itemcfields' \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"sectionVSfields":{"2000000000015":{"fieldJObj":{"2000000000039":["Start After","Start after",false,5,false,false,"START_AFTER","START_AFTER",0,7,"","",false,"",{}],"2000000000029":["Epic","Select Epic",true,7,false,false,"EPIC_ID","EPIC_ID",0,2,"","",false,"",{}],"2000000000041":["Duration","Select Duration",true,5,false,false,"DURATION","DURATION",0,8,"","",false,"",{}],"2000000000031":["Item Type","Type of the item",true,7,false,false,"PROJ_ITEMTYPE_ID","PROJ_ITEMTYPE_ID",0,3,"","",false,"",{}],"2000000000021":["Owner","Select Owner",true,10,false,false,"OWNER_ID","OWNER_ID",0,0,"","",false,"",{}],"2000000000043":["Estimation Points","Select Estimation points",true,7,false,false,"POINTS","POINTS",0,9,"","",false,"",{}],"2000000000033":["Priority","Select Item priority",true,7,false,false,"PROJ_PRIORITY_ID","PROJ_PRIORITY_ID",0,4,"","",false,"",{}],"2000000000035":["Start Date","Select Start date",true,3,false,false,"START_DATE","START_DATE",0,5,"","",false,"",{}],"2000000000025":["Status","Epic",true,7,false,false,"STATUS_ID","STATUS_ID",0,1,"","",false,"",{}],"2000000000037":["End Date","Select End date",true,3,false,false,"END_DATE","END_DATE",0,6,"","",false,"",{}]},"fieldIds":["2000000000021","2000000000025","2000000000029","2000000000031","2000000000033","2000000000035","2000000000037","2000000000039","2000000000041","2000000000043"]}},"sectionData":{"customsection_prop":{"sectionName":1,"sequence":3,"isDefault":2,"createdBy":4,"createdTime":5,"layoutId":0},"customsectionIds":["2000000000015"],"customsectionJObj":{"2000000000015":["2000000000013","Default Section",true,1,"2000000000009","2019-01-09T12:10:42.204Z"]}},"customfield_prop":{"fieldName":0,"defaultValue":10,"description":1,"optionGroups":14,"paramName":7,"sequence":9,"isDefault":2,"fieldOption":8,"isEncrypted":4,"isPII":5,"placeholder":13,"fieldType":3,"udfName":6,"validation":11,"isMandatory":12},"optgroup_prop":{"groupName":0,"options":1},"options_prop":{"optionTitle":0,"isDefault":2,"userId":1},"status":"success"}'
							} ]
						},
						{
							"name" : "Get item types",
							"desc" : "Fetch the list of item types in the specific project.",
							"scope" : "ZohoSprints.projects.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/itemtype/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>alldata</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/itemtype/?action=alldata \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"projItemTypeIds":["579000000062023","579000000062019","579000000062021"],"projItemType_prop":{"sequence":3,"isDefault":1,"itemTypeImage":6,"prefix":5,"itemTypeDescription":7,"itemTypeName":0,"itemTypeId":2,"baseType":4},"projItemTypeJObj":{"579000000062019":["Task",true,"579000000002013","1",0,"I","1","A smaller entity that builds your requirement."],"579000000062023":["Story",true,"579000000002017","2",2,"I","2","A short description that defines your requirement."],"579000000062021":["Bug",true,"579000000002015","0",1,"I","0","Issues while working on the stories and tasks."]},"status":"success"}'
							} ]
						},
						{
							"name" : "Get priority types",
							"desc" : "Fetch the list of priority types in the specific project.",
							"scope" : "ZohoSprints.projects.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/priority/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/priority/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"priorityIds":["579000000002041","579000000002039","579000000002037","579000000002035"],"priorityidVSProjpriorityid":{"579000000002041":["579000000062017"],"579000000002035":["579000000062011"],"579000000002039":["579000000062015"],"579000000002037":["579000000062013"]},"projPriority_prop":{"priorityName":0,"isDefault":1,"colorCode":2,"priorityId":3},"projPriorityJObj":{"579000000062017":["None",true,"#95a5a6","579000000002041"],"579000000062015":["Low",true,"#3e9354","579000000002039"],"579000000062013":["Medium",true,"#fe9354","579000000002037"],"579000000062011":["High",true,"#cf442f","579000000002035"]},"projPriorityIds":["579000000062017","579000000062015","579000000062013","579000000062011"],"isFreePlan": false,"status":"success"}'
							} ]
						},
						{
							"name" : "Get project status",
							"desc" : "Fetch the status of a specific project.",
							"scope" : "ZohoSprints.projectitemstatus.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/workflow/{workflowId}/status/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/workflow/579000000062029/status/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"isDefault": true,"workflowName": "Sample Project","statusJObj":{"2000000000029":["Done",true,1,"#259e92",false,true,"2000000000005","2017-12-12T10:21:15.557Z",-1,-1],"2000000000021":["To do",true,0,"#fa335c",true,false,"2000000000005","2017-12-12T10:21:15.557Z",-1,-1],"2000000000023":["In progress",true,2,"#4a7297",false,false,"2000000000005","2017-12-12T10:21:15.557Z",-1,-1]},"statusIds":["2000000000021","2000000000023","2000000000029"],"wipType": 0,"workflowId": "2000000000871","status_prop":{"isDefault":1,"statusType":2,"createdBy":6,"statusName":0,"wipMin": 8,"createdTime":7,"colorCode":3,"wipMax": 9,"isStart":4,"isEnd":5},"status":"success"}'
							} ]
						},
						{
							"name" : "Create project status",
							"desc" : "Create a status for a specific project.",
							"scope" : "ZohoSprints.projectitemstatus.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/workflow/{workflowId}/status/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the status."
											},
											{
												"name" : "type",
												"type" : "int",
												"desc" : "",
												"regex" : "Allowed values: <ul><li>0 - Open</li><li>1 - Closed</li><li>2 - In progress</li><ul>"
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/workflow/579000000062029/status/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Not an issue' \\--data-urlencode 'type=2'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"statusJObj":{"579000000126001":["Not an issue",false,0,"#815433",false,false,-1,-1]},"statusIds":["579000000126001"],"status_prop":{"isDefault":1,"statusType":2,"statusName":0,"wipMin":7,"colorCode":3,"wipMax":6,"isStart":4,"isEnd":5},"status":"success"}'
							} ]
						},
						{
							"name" : "Update project status",
							"desc" : "Update a specific status in a specific project.",
							"scope" : "ZohoSprints.projectitemstatus.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/workflow/{workflowId}/status/{statusId}/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the status."
											},
											{
												"name" : "type",
												"type" : "int",
												"desc" : "",
												"regex" : "Allowed values: <ul><li>0 - Open</li><li>1 - Closed</li><li>2 - In progress</li><ul>"
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/workflow/579000000062029/status/579000000126001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=Not an issue' \\--data-urlencode 'type=1'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"newstatusId":"579000000126009","idchanged":true,"oldstatusId":"579000000126001","status":"success"}'
							} ]
						},
						{
							"name" : "Delete project status",
							"desc" : "Delete a specific status in a specific project.",
							"scope" : "ZohoSprints.projectitemstatus.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/workflow/{workflowId}/status/{statusId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/workflow/579000000062029/status/579000000126001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
						} ]
			},
			{
				"tabName" : "WebHook",
				"tabValues" : [
					{
						"name" : "WebHooks",
						"desc" : "A webhook is a HTTP callback or push API that automatically sends real time notifications to third party applications."
					},
					{
						"name" : "Get business rules",
						"desc" : "The trigger events are the business rules that you set. Each module has its respective trigger events.",
						"scope" : "ZohoSprints.webhook.READ",
						"method" : "GET",
						"url" : "/zsapi/team/{teamId}/businessrules/",
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/businessrules/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"businessrulesIds":["2000000000659","2000000000661","2000000000663","2000000000665","2000000000667","2000000000669","2000000000671","2000000000673","2000000000675","2000000000677","2000000000679","2000000000681","2000000000683","2000000000685","2000000000687","2000000000689","2000000000691","2000000000693","2000000000695","2000000000697","2000000000699","2000000000701","2000000000703","2000000000705","2000000000707","2000000000709","2000000000711","2000000000713"],"iswebhooksAvail":true,"businessrulesJObj":{"2000000000667":["za.rule.sprintnotesupdate",25],"2000000000689":["za.rule.logsadd",16],"2000000000669":["za.rule.epicdelete",2],"2000000000701":["za.rule.itemdelete",3],"2000000000703":["za.rule.itemnotesdelete",26],"2000000000705":["za.rule.epiccreate",2],"2000000000681":["za.rule.projectarchive",0],"2000000000661":["za.rule.itemnotesadd",26],"2000000000683":["za.rule.projectupdate",0],"2000000000663":["za.rule.projectdelete",0],"2000000000685":["za.rule.sprintdelete",1],"2000000000665":["za.rule.sprintupdate",1],"2000000000687":["za.rule.itemclosed",3],"2000000000707":["za.rule.projectcreate",0],"2000000000709":["za.rule.itemnotesupdate",26],"2000000000711":["za.rule.sprintstart",1],"2000000000677":["za.rule.sprintcomplete",1],"2000000000699":["za.rule.logsupdate",16],"2000000000713":["za.rule.itemcreate",3],"2000000000679":["za.rule.companyuseradd",7],"2000000000659":["za.rule.projectuserdelete",24],"2000000000691":["za.rule.itemupdate",3],"2000000000671":["za.rule.companyuserdelete",7],"2000000000693":["za.rule.projectuseradd",24],"2000000000673":["za.rule.sprintnotesdelete",25],"2000000000695":["za.rule.sprintnotesadd",25],"2000000000675":["za.rule.epicupdate",2],"2000000000697":["za.rule.sprintcreate",1]},"businessrules_prop":{"entityType":1,"ruleName":0},"status":"success"}'
						} ]
					},
					{
						"name" : "Get modules and params",
						"desc" : "Fetch all the webhooks associated with a specific module.",
						"scope" : "ZohoSprints.webhook.READ",
						"method" : "GET",
						"url" : "/zsapi/team/{teamId}/webhooks/",
						"subtitles" : [ {
							"name" : "Parameters",
							"desc" : "",
							"params" : {
								"data" : [
										{
											"name" : "action",
											"type" : "String",
											"desc" : "Set value as <b>createFormDetails</b>",
											"isrequired" : ""
										},
										{
											"name" : "needmodules",
											"type" : "Boolean",
											"desc" : "Mention 'TRUE' to fetch all the modules that are supported by the webhooks.",
											"isrequired" : ""
										},
										{
											"name" : "module",
											"type" : "int",
											"desc" : "Select the module to create a webhook.",
											"isrequired" : ""
										}
								],
								"class" : "params"
							}
						} ],
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/webhooks/?action=createFormDetails&needmodules=false&module=0' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"modulesArr": [{"moduleName": "Project","moduleVal": "0"},{"moduleName": "Sprint","moduleVal": "1"},{"moduleName": "Item","moduleVal": "3"},{"moduleName": "Sprint Comments","moduleVal": "25"},{"moduleName": "Item Comments","moduleVal": "26"},{"moduleName": "Project User","moduleVal": "24"},{"moduleName": "Team User","moduleVal": "7"},{"moduleName": "Log hours","moduleVal": "16"},{"moduleName": "Epic","moduleVal": "2"},{"moduleName": "Meeting","moduleVal": "4"},{"moduleName": "Meeting Comments","moduleVal": "42"},{"moduleName": "Item Commits","moduleVal": "40"},{"moduleName": "Item Pullrequests","moduleVal": "41"}],"paramsList":["${Project.ProjectId}","${Project.ProjectName}","${Project.ProjectDescription}","${Project.ProjectOwner}","${Project.ProjectOwnerName}","${Project.ProjectCreator}","${Project.ProjectCreatorName}","${Project.ProjectStatus}","${Project.StartDate}","${Project.EndDate}","${Project.ProjectNumber}","${Project.ProjectSequence}"],"status":"success"}'
						} ]
					},
					{
						"name" : "Get webhooks",
						"desc" : "Fetch all the webhooks.",
						"scope" : "ZohoSprints.webhook.READ",
						"method" : "GET",
						"url" : "/zsapi/team/{teamId}/webhooks/",
						"subtitles" : [ {
							"name" : "Parameters",
							"desc" : "",
							"params" : {
								"data" : [
										{
											"name" : "action",
											"type" : "String",
											"desc" : "Set value as <b>getwebhooks</b>",
											"isrequired" : ""
										},
										{
											"name" : "index",
											"type" : "int",
											"desc" : "Index from which the listing has to start.",
											"isrequired" : ""
										},
										{
											"name" : "range",
											"type" : "int",
											"desc" : "No. of records that have to be listed.",
											"isrequired" : ""
										}
								],
								"class" : "params"
							}
						} ],
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/webhooks/?index=1&range=10&action=getwebhooks' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"webhooks_prop":{"method":2,"webhookStatus":3,"webhookName":0,"webhookUrl":1},"webhookvsRulesMapping": {"2000000004001": ["2000000000673"]},"next": false,"webhooksIds":["2000000004001"],"webhooksJObj":{"2000000004001":["create item","https://webhook.site/52362018-1cab-42f2-a079-c9081b7669a6",0,0]},"status":"success"}'
						} ]
					},
					{
						"name" : "Get webhook details",
						"desc" : "Fetch all the webhooks and its details.",
						"scope" : "ZohoSprints.webhook.READ",
						"method" : "GET",
						"url" : "/zsapi/team/{teamId}/webhooks/{webhookId}/",
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/webhooks/2000000004001/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"webhooks_prop":{"method":2,"customParams":8,"webhookStatus":9,"entityType":4,"keyvalParams":5,"formattedParams":6,"webhookName":0,"description":3,"ruleId":10,"webhookUrl":1,"customHeaders":7},"webhooksIds":["2000000004001"],"webhooksJObj":{"2000000004001":["create item","https://webhook.site/52362018-1cab-42f2-a079-c9081b7669a6",2,"",0,"","","","",0,["2000000000707"]]},"paramsList":["${Project.ProjectId}","${Project.ProjectName}","${Project.ProjectDescription}","${Project.ProjectOwner}","${Project.ProjectOwnerName}","${Project.ProjectCreator}","${Project.ProjectCreatorName}","${Project.ProjectStatus}","${Project.StartDate}","${Project.EndDate}","${Project.ProjectNumber}","${Project.ProjectSequence}"],"status":"success"}'
						} ]
					},
					{
						"name" : "Create webhook",
						"desc" : "Create a webhook for specific module.",
						"scope" : "ZohoSprints.webhook.CREATE",
						"method" : "POST",
						"url" : "/zsapi/team/{teamId}/webhooks/",
						"subtitles" : [ {
							"name" : "Parameters",
							"desc" : "",
							"params" : {
								"data" : [
										{
											"name" : "webhookname",
											"type" : "String",
											"desc" : "Name of the webhook.",
											"isrequired" : ""
										},
										{
											"name" : "webhookurl",
											"type" : "String",
											"desc" : "Enter the REST API URL of your third party application.",
											"isrequired" : ""
										},
										{
											"name" : "module",
											"type" : "int",
											"desc" : "Webhooks are module specific in Zoho Sprints. Create a webhook for each module.",
											"isrequired" : ""
										},
										{
											"name" : "rules",
											"type" : "JSONArray",
											"desc" : "Trigger events that you set for the module.",
											"isrequired" : ""
										},
										{
											"name" : "method",
											"type" : "int",
											"desc" : "Choose the API method for your event.",
											"regex" : "Allowed values:<ul><li>0 - Get</li><li>1 - Put</li><li>2 - Post</li><li>3 - Delete</li></ul>",
											"isrequired" : ""
										},
										{
											"name" : "webhookdesc",
											"type" : "String",
											"desc" : "Description of the webhook."
										},
										{
											"name" : "keyvalparams",
											"type" : "JSONArray",
											"desc" : "Parameters that are associated with a particular module. For example: name = value. Project ID and Item ID are the key value parameters."
										},
										{
											"name" : "formattedparams",
											"type" : "JSONObject",
											"desc" : "Parameters that are rendered in the standard format (JSON, XML, etc. or name = value). For example: ItemObject is formatted parameter."
										},
										{
											"name" : "customparams",
											"type" : "JSONArray",
											"desc" : "Append custom parameters to the webhook URL."
										},
										{
											"name" : "customheaders",
											"type" : "JSONArray",
											"desc" : "Append custom headers to your webhook URL."
										}
								],
								"class" : "params"
							}
						} ],
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/webhooks/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'webhookname=create item'   \\--data-urlencode 'webhookurl=https://webhook.site/52362018-1cab-42f2-a079-c9081b7669a6'   \\--data-urlencode 'module=0'   \\--data-urlencode 'rules=[\"2000000000707\"]'   \\--data-urlencode 'method=2'   \\--data-urlencode 'webhookdesc='''"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"webhooks_prop":{"method":2,"webhookStatus":3,"webhookName":0,"ruleId":4,"webhookUrl":1},"webhooksIds":["2000000004001"],"webhooksJObj":{"2000000004001":["create item","https://webhook.site/52362018-1cab-42f2-a079-c9081b7669a6",2,0,["2000000000707"]]},"userDisplayName":{},"status":"success"}'
						} ]
					},
					{
						"name" : "Update webhook",
						"desc" : "Update the webhook details.",
						"scope" : "ZohoSprints.webhook.UPDATE",
						"method" : "POST",
						"url" : "/zsapi/team/{teamId}/webhooks/{webhookId}/",
						"subtitles" : [ {
							"name" : "Parameters",
							"desc" : "",
							"params" : {
								"data" : [
										{
											"name" : "webhookname",
											"type" : "String",
											"desc" : "Name of the webhook"
										},
										{
											"name" : "webhookurl",
											"type" : "String",
											"desc" : "Enter the REST API URL of your third party application."
										},
										{
											"name" : "module",
											"type" : "int",
											"desc" : "Webhooks are module specific in Zoho Sprints. Create a webhook for each module."
										},
										{
											"name" : "rules",
											"type" : "JSONArray",
											"desc" : "Trigger events that you set for the module."
										},
										{
											"name" : "delrules",
											"type" : "JSONArray",
											"desc" : "Trigger events that are deleted or previously associated with a webhook (Currently disassociated). Remove a trigger event for a particular webhook and update it with a new rule."
										},
										{
											"name" : "method",
											"type" : "int",
											"desc" : "Choose the API method for your event.",
											"regex" : "Allowed values:<ul><li>0 - Get</li><li>1 - Put</li><li>2 - Post</li><li>3 - Delete</li></ul>"
										},
										{
											"name" : "webhookdesc",
											"type" : "String",
											"desc" : "Description of the webhook."
										},
										{
											"name" : "keyvalparams",
											"type" : "JSONArray",
											"desc" : "Parameters that are associated with a particular module. For example: name = value. Project ID and Item ID are the key value parameters."
										},
										{
											"name" : "formattedparams",
											"type" : "JSONObject",
											"desc" : "Parameters that are rendered in the standard format (JSON, XML, etc. or name = value). For example: ItemObject is formatted parameter."
										},
										{
											"name" : "customparams",
											"type" : "JSONArray",
											"desc" : "Append custom parameters to the webhook URL."
										},
										{
											"name" : "customheaders",
											"type" : "JSONArray",
											"desc" : "Append custom headers to your webhook URL"
										}
								],
								"class" : "params"
							}
						} ],
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/webhooks/2000000004001/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'   //--data-urlencode 'webhookname=create item'   //--data-urlencode 'webhookurl=https://webhook.site/52362018-1cab-42f2-a079-c9081b7669a6'   //--data-urlencode 'module=0'   //--data-urlencode 'method=2'   //--data-urlencode 'webhookdesc='''"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"webhookName":"create item","status":"success"}'
						} ]
					},
					{
						"name" : "Delete webhook",
						"desc" : "Delete a particular webhook.",
						"scope" : "ZohoSprints.webhook.DELETE",
						"method" : "DELETE",
						"url" : "/zsapi/team/{teamId}/webhooks/{webhookId}/",
						"request" : [ {
							"name" : "Example Request",
							"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/webhooks/2000000004001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
						} ],
						"response" : [ {
							"name" : "Example Response",
							"jsonresp" : '{"status":"success"}'
						} ]
					} ]			
			},
			{
				"tabName" : "Meetings",
				"tabValues" : [
						{
							"name" : "Meetings",
							"desc" : "A meeting is an integral part of a project because communicating at regular intervals increases productivity. You can schedule meetings before a sprint's start, in the middle of its course and after its completion as well.",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/schedule-and-manage-meetings"
						},
						{
							"name" : "Get all meetings",
							"desc" : "Fetch the list of meetings in a project.",
							"scope" : "ZohoSprints.meetings.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/meeting/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/meeting/?filter=%7B%22viewtype%22%3A0%7D \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":true,"meeting_prop":{"scheduledTime":7,"recurringFrequency":12,"updatedBy":16,"timesOccurred":14,"description":6,"scheduledDate":8,"meetingId":0,"meetingTitle":4,"numberOfTimes":13,"isActive":3,"meetingType":5,"meetingNumber":2,"duration":9,"commentsAvailable":17,"sprintId":19,"createdBy":15,"remindBefore":11,"location":10,"participantsId":21,"isIntegrated":20,"attachmentAvailable":18,"projectId":1},"extra_prop":{"hasEditPermission":1,"hasDeletePermission": 2,"when":0},"meetingIds":["579000000121959","579000000067175"],"sprintObj":{"sprintIds":["579000000062055"],"sprint_prop":{"sprintId":0,"sprintType":2,"sprintName":1,"sprintNo":3},"sprintJObj":{"579000000062055":["579000000062055","Payments",2,"3"]}},"userDisplayName":{"579000000004001":"J**n M***h","579000000025015":"c*****s.s","579000000011131":"E*****o V****s","579000000002003":"H***n C*****s","579000000017063":"K*****a R***j"},"dataAvailable":true,"meetingJObj":{"579000000121959":["579000000121959","579000000062001","13",false,"Daily Stand up",0,"","2017-12-14T05:20:00.000Z","2017-12-13T18:30:00.000Z","1h","The meeting room",0,1,2,1,"579000000002003","579000000002003",false,false,"579000000062055",false,["579000000002003","579000000004001","579000000011131","579000000017063","579000000025015"]],"579000000067175":["579000000067175","579000000062001","8",false,"Retrospective",4,"","2017-10-23T09:30:00.000Z","2017-10-22T18:30:00.000Z","1h","",0,0,1,1,"579000000002003","579000000002003",false,false,"579000000062055",false,["579000000002003","579000000004001","579000000011131","579000000017063","579000000025015"]]},"nextIndex":3,"extraJObj":{"579000000121959":["Yesterday",true,true],"579000000067175":["",true,true]},"isFreePlan": false,"status":"success"}'
							} ],
							"subtitles" : [
									{
										"name" : "Parameters",
										"params" : {
											"data" : [
											{
												"name" : "filter",
												"subparamanchor" : "Show key-value pairs",
												"type" : "JSONObject",
												"desc" : "",
												"subparams" : {
													"data" : [
													{
														"name" : "viewtype",
														"type" : "int",
														"desc" : "Filter current or completed meetings based on your need.",
														"regex" : "<ul><li>current - 0</li> <li>completed -1</li></ul>",
														"isrequired" : ""
													} ],
													"class" : "subparams"
												},
												"isrequired" : ""
											} ],
											"class" : "params"
										}
									} ]
						},
						{
							"name" : "Get sprint meetings",
							"desc" : "Fetch the list of meetings in a specific sprint.",
							// i18n
							"scope" : "ZohoSprints.meetings.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/meeting/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/meeting/?filter=%7B%22viewtype%22%3A0%7D \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							// i18n
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":true,"meeting_prop":{"scheduledTime":7,"recurringFrequency":12,"updatedBy":16,"timesOccurred":14,"description":6,"scheduledDate":8,"meetingId":0,"meetingTitle":4,"numberOfTimes":13,"isActive":3,"meetingType":5,"meetingNumber":2,"duration":9,"commentsAvailable":17,"sprintId":19,"createdBy":15,"remindBefore":11,"location":10,"isIntegrated": 20,"participantsId":21,"attachmentAvailable":18,"projectId":1},"extra_prop":{"hasEditPermission":1,"hasDeletePermission": 2,"when":0},"meetingIds":["579000000121959","579000000067175"],"sprintObj":{"sprintIds":["579000000062055"],"sprint_prop":{"sprintId":0,"sprintType":2,"sprintName":1,"sprintNo":3},"sprintJObj":{"579000000062055":["579000000062055","Payments",2,"3"]}},"userDisplayName":{"579000000004001":"J**n M***h","579000000025015":"c*****s.s","579000000011131":"E*****o V****s","579000000002003":"H***n C*****s","579000000017063":"K*****a R***j"},"dataAvailable":true,"meetingJObj":{"579000000121959":["579000000121959","579000000062001","13",false,"Daily Stand up",0,"","2017-12-14T05:20:00.000Z","2017-12-13T18:30:00.000Z","1h","The meeting room",0,1,2,1,"579000000002003","579000000002003",false,false,"579000000062055",false,["579000000002003","579000000004001","579000000011131","579000000017063","579000000025015"]],"579000000067175":["579000000067175","579000000062001","8",false,"Retrospective",4,"","2017-10-23T09:30:00.000Z","2017-10-22T18:30:00.000Z","1h","",0,0,1,1,"579000000002003","579000000002003",false,false,"579000000062055",false,["579000000002003","579000000004001","579000000011131","579000000017063","579000000025015"]]},"nextIndex":3,"extraJObj":{"579000000121959":["Yesterday",true,true],"579000000067175":["",true,true]},"status":"success"}'
							// i18n
							} ],
							"subtitles" : [
									{
										"name" : "Parameters",
										"desc" : "",
										"params" : {
											"data" : [
											{
												"name" : "filter",
												"subparamanchor" : "Show key-value pairs",
												"type" : "JSONObject",
												"desc" : "",
												"subparams" : {
													"data" : [
													{
														"name" : "viewtype",
														"type" : "int",
														"desc" : "Filter current or completed meetings based on your need.",
														"regex" : "<ul><li>current - 0</li> <li>completed -1</li></ul>",
														"isrequired" : ""
													} ],
													"class" : "subparams"
												},
												"isrequired" : ""
											} ],
											"class" : "params"
										}
									} ]
						},
						{
							"name" : "Get meeting details",
							"desc" : "Fetch the details of a specific meeting.",
							"scope" : "ZohoSprints.meetings.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062037/meeting/579000000065017/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"meeting_prop":{"scheduledTime":7,"recurringFrequency":12,"updatedBy":16,"timesOccurred":14,"description":6,"scheduledDate":8,"meetingId":0,"meetingTitle":4,"numberOfTimes":13,"isActive":3,"meetingType":5,"meetingNumber":2,"duration":9,"commentsAvailable":17,"sprintId":19,"createdBy":15,"remindBefore":11,"location":10,"participantsId":21,"isIntegrated": 20,"attachmentAvailable":18,"projectId":1},"extra_prop":{"hasEditPermission":1,"hasDeletePermission": 2,"when":0},"meetingIds":["579000000065017"],"sprintObj":{"sprintIds":["579000000062051"],"sprint_prop":{"sprintId":0,"sprintType":2,"sprintName":1,"sprintNo":3},"sprintJObj":{"579000000062051":["579000000062051","User interface sprint",3,"1"]}},"userDisplayName":{"579000000004001":"J***n M***h","579000000025015":"c*****s.s","579000000011131":"E*****o V****s","579000000002003":"H***n C*****s","579000000017063":"Kavitha R****j"},"dataAvailable":true,"meetingJObj":{"579000000065017":["579000000065017","579000000062001","4",false,"SprintReview - User Interface Sprint",3,"","2017-10-17T11:00:00.000Z","2017-10-16T18:30:00.000Z","1h","",0,0,1,1,"579000000002003","579000000002003",false,false,"579000000062051",false,["579000000002003","579000000004001","579000000011131","579000000017063","579000000025015"]]},"extraJObj":{"579000000065017":["",true,true]},"status":"success"}'
							} ]
						},
						{
							"name" : "Get meeting comments",
							"desc" : "Fetch the comments of a specific meeting.",
							"scope" : "ZohoSprints.meetings.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/notes/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062037/meeting/579000000065077/notes/?index=1&range=10' \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"commentJObj":{"579000000127005":["579000000065077","579000000127005","new comment","579000000002003","2017-12-15T10:19:04.662Z","579000000002003","2017-12-15T10:19:04.662Z",0],"579000000127001":["579000000065077","579000000127001","Issue has been fixed now. Pls chk.","579000000002003","2017-12-15T10:18:14.882Z","579000000002003","2017-12-15T10:18:14.882Z",0]},"next":false,"hasAddItemPermission": true,"extra_prop":{"hasEditPermission":0,"hasDeletePermission":1},"attachments":{},"comment_prop":{"updatedBy":5,"createdBy":3,"commentId":1,"createdTime":4,"meetingId":0,"comment":2,"lastUpdatedTime":6,"attachmentCount":7},"isFreePlan": false,"userDisplayName":{"579000000002003":"Helen Collins"},"dataAvailable":true,"extraJObj":{"579000000127005":[true,true],"579000000127001":[true,true]},"commentIds":["579000000127005","579000000127001"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add meeting",
							"desc" : "Schedule a meeting.",
							"scope" : "ZohoSprints.meetings.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062037/meeting/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\  --data-urlencode 'title= UI Review' \\  --data-urlencode 'description=' \\  --data-urlencode 'scheduledon=2017-12-16T16:20:00+05:30' \\  --data-urlencode 'location='' \\  --data-urlencode 'duration=1h' \\  --data-urlencode 'participants=[\"579000000002003\"]' \\  --data-urlencode 'type=0' \\  --data-urlencode 'remindbefore=0' \\  --data-urlencode 'alerttype=0' \\  --data-urlencode 'nooftimes=1'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":true,"meeting_prop":{"scheduledTime":7,"recurringFrequency":12,"updatedBy":16,"timesOccurred":14,"description":6,"scheduledDate":8,"meetingId":0,"meetingTitle":4,"numberOfTimes":13,"isActive":3,"meetingType":5,"meetingNumber":2,"duration":9,"commentsAvailable":17,"sprintId":19,"createdBy":15,"remindBefore":11,"location":10,"isIntegrated": 20,"participantsId":21,"attachmentAvailable":18,"projectId":1},"extra_prop":{"hasEditPermission":1,"hasDeletePermission":2,"when":0},"meetingIds":["579000000127013"],"hasAddItemPermission": true,"sprintObj":{"sprintIds":["579000000062037"],"sprint_prop":{"sprintId":0,"sprintType":2,"sprintName":1,"sprintNo":3},"sprintJObj":{"579000000062037":["579000000062037","Backlog",5,"0"]}},"userDisplayName":{"579000000002003":"Helen Collins"},"dataAvailable":true,"meetingJObj":{"579000000127013":["579000000127013","579000000062001","15",true,"UI Review",0,"","2017-12-16T10:50:00.000Z","2017-12-15T18:30:00.000Z","1h","",0,0,-1,0,"579000000002003","579000000002003",false,false,"579000000062037",true,["579000000002003"]]},"nextIndex":2,"extraJObj":{"579000000127013":["Tomorrow",true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "title",
												"type" : "String",
												"desc" : "Title of the meeting.",
												"isrequired" : ""
											},
											{
												"name" : "description",
												"type" : "String",
												"desc" : "Agenda of the meeting."
											},
											{
												"name" : "scheduledon",
												"type" : "String",
												"desc" : "Date on which the meeting falls.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
												"isrequired" : ""
											},
											{
												"name" : "location",
												"type" : "String",
												"desc" : "Venue of the meeting."
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Tentative time taken for the meeting to complete.",
												"isrequired" : ""
											},
											{
												"name" : "participants",
												"type" : "JSONArray",
												"desc" : "Users who will participate in the meeting.",
												"isrequired" : ""
											},
											{
												"name" : "type",
												"type" : "Long",
												"desc" : "Type of the meeting.",
												"isrequired" : ""
											},
											{
												"name" : "remindbefore",
												"type" : "String",
												"desc" : "Time before which the meeting has to be reminded.",
												"isrequired" : ""
											},
											{
												"name" : "alerttype",
												"type" : "String",
												"desc" : "Frequency of the recurrence of the meeting."
											},
											{
												"name" : "nooftimes",
												"type" : "int",
												"desc" : "Number of times the meeting should recur."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add meeting comment",
							"desc" : "Comment on a specific meeting.",
							"scope" : "ZohoSprints.meetings.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/notes/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/meeting/579000000127013/notes/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'comment=Check this issue and fix ASAP in this sprint'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"commentJObj":{"1026000000132029":["1026000000125001","1026000000132029","File all issues.","1026000000003003","2020-01-14T09:38:34.510Z","1026000000003003","2020-01-14T09:38:34.510Z",0]},"next":true,"extra_prop":{"hasEditPermission":0,"hasDeletePermission":1},"attachments":{},"comment_prop":{"updatedBy":5,"createdBy":3,"commentId":1,"createdTime":4,"meetingId":0,"comment":2,"lastUpdatedTime":6,"attachmentCount":7},"userDisplayName":{"1026000000003003":"G*k**********.d"},"dataAvailable":true,"nextIndex":2,"isFreePlan":false,"extraJObj":{"1026000000132029":[true,true]},"commentIds":["1026000000132029"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "comment",
												"type" : "String",
												"desc" : "Comment that has to be added.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update meeting",
							"desc" : "Modify the details of a current meeting.",
							"scope" : "ZohoSprints.meetings.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062037/meeting/579000000127013/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\  --data-urlencode 'title=Ice Breaker' \\  --data-urlencode 'description=' \\  --data-urlencode 'scheduledon=2017-12-16T16:20:00+05:30' \\  --data-urlencode 'location='' \\  --data-urlencode 'duration=1h' \\  --data-urlencode 'participants=[\"579000000002003\"]' \\  --data-urlencode 'type=0' \\  --data-urlencode 'remindbefore=0' \\  --data-urlencode 'alerttype=0' \\  --data-urlencode 'nooftimes=1'"

							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"next":true,"meeting_prop":{"scheduledTime":7,"recurringFrequency":12,"updatedBy":16,"timesOccurred":14,"description":6,"scheduledDate":8,"meetingId":0,"meetingTitle":4,"numberOfTimes":13,"isActive":3,"meetingType":5,"meetingNumber":2,"duration":9,"commentsAvailable":17,"sprintId":19,"createdBy":15,"remindBefore":11,"location":10,"isIntegrated": 20,"participantsId":21,"attachmentAvailable":18,"projectId":1},"hasAddItemPermission": true,"extra_prop":{"hasEditPermission":1,"hasDeletePermission":2,"when":0},"meetingIds":["579000000127013"],"sprintObj":{"sprintIds":["579000000062037"],"sprint_prop":{"sprintId":0,"sprintType":2,"sprintName":1,"sprintNo":3},"sprintJObj":{"579000000062037":["579000000062037","Backlog",5,"0"]}},"userDisplayName":{"579000000002003":"Helen Collins"},"dataAvailable":true,"meetingJObj":{"579000000127013":["579000000127013","579000000062001","15",true,"Ice Breaker",0,"","2017-12-16T10:50:00.000Z","2017-12-15T18:30:00.000Z","1h","",0,0,-1,0,"579000000002003","579000000002003",false,false,"579000000062037",true,["579000000002003"]]},"nextIndex":2,"extraJObj":{"579000000127013":["Tomorrow",true,true]},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "title",
												"type" : "Stirng",
												"desc" : "Title of the meeting.",
												"isrequired" : ""
											},
											{
												"name" : "description",
												"type" : "String",
												"desc" : "Agenda of the meeting."
											},
											{
												"name" : "scheduledon",
												"type" : "String",
												"desc" : "Date on which the meeting falls.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
												"isrequired" : ""
											},
											{
												"name" : "location",
												"type" : "String",
												"desc" : "Venue of the meeting."
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Tentative time taken for the meeting to complete.",
												"isrequired" : ""
											},
											{
												"name" : "participants",
												"type" : "JSONArray",
												"desc" : "Users who will participate in the meeting.",
												"isrequired" : ""
											},
											{
												"name" : "type",
												"type" : "int",
												"desc" : "Type of the meeting.",
												"isrequired" : ""
											},
											{
												"name" : "tosprintid",
												"type" : "Long",
												"desc" : "ID of the associated sprint.",
												"isrequired" : ""
											},
											{
												"name" : "remindbefore",
												"type" : "String",
												"desc" : "Time before which the meeting has to be reminded.",
												"isrequired" : ""
											},
											{
												"name" : "alerttype",
												"type" : "String",
												"desc" : "Frequency of the recurrence of the meeting."
											},
											{
												"name" : "nooftimes",
												"type" : "int",
												"desc" : "Number of times the meeting should recur."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update meeting comment",
							"desc" : "Modify a specific meeting comment.",
							"scope" : "ZohoSprints.meetings.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/notes/{notesId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/meeting/579000000127013/notes/589000000128015/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'comment=Check this issue and fix ASAP in this sprint'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"commentJObj":{"1026000000132029":["1026000000125001","1026000000132029","File all issues.","1026000000003003","2020-01-14T09:38:34.510Z","1026000000003003","2020-01-14T09:38:34.510Z",0]},"next":true,"extra_prop":{"hasEditPermission":0,"hasDeletePermission":1},"attachments":{},"comment_prop":{"updatedBy":5,"createdBy":3,"commentId":1,"createdTime":4,"meetingId":0,"comment":2,"lastUpdatedTime":6,"attachmentCount":7},"userDisplayName":{"1026000000003003":"G*k**********.d"},"dataAvailable":true,"nextIndex":2,"isFreePlan":false,"extraJObj":{"1026000000132029":[true,true]},"commentIds":["1026000000132029"],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
									{
										"name" : "comment",
										"type" : "String",
										"desc" : "Modified meeting comment.",
										"isrequired" : ""
									}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Delete meeting",
							"desc" : "Cancel a specific meeting.",
							"scope" : "ZohoSprints.meetings.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062037/meeting/579000000127013/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
						},
						{
							"name" : "Delete meeting comment",
							"desc" : "Delete a meeting comment.",
							"scope" : "ZohoSprints.meetings.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{backlogId|sprintId}/meeting/{meetingId}/notes/{notesId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/meeting/579000000127013/notes/579000000127013/ \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						} ]
			},
			{
				"tabName" : "Timesheet",
				"tabValues" : [
						{
							"name" : "Timesheet",
							"desc" : "With timesheet, you can measure the effort logged on every work item in your sprint. It helps in evaluating the team’s productivity and performance.",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/manage-timesheets"
						},
						{
							"name" : "Get log hours",
							"desc" : "Fetch the list of time logs for a specific sprint.",
							"scope" : "ZohoSprints.timesheets.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/timesheet/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000122199/timesheet/?action=logitems&index=1&range=10&listviewtype=1' \\ -H 'Authorization: Zoho-oauthtoken 1000.ef11d265b836a8b0dab1e18ff2605243.a44f5da603139db1cbf6a08ac7afabb6'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"logIds":["579000000128433"],"logTimers":{},"iteminteg_prop": {"integlist": 1,"itemaddedvia": 0},"isAJM": true,"hasData":true,"logJObj":{"579000000128433":["579000000128433","13","Design the buttons","579000000128431","579000000002003","2019-05-21T18:29:59.999Z","3600000","579000000121139",0,0,"","579000000002003","","","579000000002003"]},"userDisplayName":{"579000000002003":"H***n C*****s"},"itemintegObj": {"579000000062055": [4,{"GOOGLE_EVENT": false,"ZOHO_PROJECTS_TASK": false,"BITBUCKET": false,"OUTLOOK_TASK": false,"GITHUB": false,"GOOGLE_TASK": false,"ZOHO_DESK": false,"OUTLOOK_EVENT": false,"GITLAB": false}]},"keyVsLogTime":{"579000000002003":"7200000"},"permObj":{"deletePerm": {"created": true,"owned": true,"others": true},"hasExportPerm": true,"editPerm": {"created": true,"owned": true,"others": true},"approvePerm": true,"hasAddPerm": true},"hasNext":true,"log_prop":{"approveType":9,"Owner":4,"logDate":5,"addedBy":11,"logNotes":12,"approvedBy":13,"itemNo":1,"logTime":6,"sprintId":0,"itemId":7,"itemName":2,"tClockId":10,"projItemTypeId":14,"billableType":8,"tLogId":3},"nextIndex":2,"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>logitems</b>",
												"isrequired" : ""
											},
											{
												"name" : "startdate",
												"type" : "dateformat",
												"desc" : "The date from which the time logs should be listed."
											},
											{
												"name" : "enddate",
												"type" : "dateformat",
												"desc" : "The date upto which the time logs should be listed."
											},
											{
												"name" : "listviewtype",
												"type" : "int",
												"desc" : "Fetch the hours logged for the work items.<br>Allowed values:<ul><li>0 - Date</li><li>1 - User</li></ul>",
												"isrequired" : ""
											},
											{
								        	  	"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start."
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed. The maximum limit is 10."
											}
									],
									"class" : "params"
								}
							} ]

						},
						{
							"name" : "Add log hours",
							"desc" : "Add time logs for a specific item.",
							"scope" : "ZohoSprints.timesheets.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/item/{itemId}/timesheet/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000122199/item/579000000121139/timesheet/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=additemlog' \\--data-urlencode 'duration=1h' \\--data-urlencode 'date=2017-12-20T00:00:00+05:30' \\--data-urlencode 'notes=' \\--data-urlencode 'users=579000000002003' \\--data-urlencode 'isbillable=0'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>additemlog</b>",
												"isrequired" : ""
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Time spent on the item.",
												"isrequired" : ""
											},
											{
												"name" : "date",
												"type" : "dateformat",
												"desc" : "Date on which the item was worked on.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
												"isrequired" : ""
											},
											{
												"name" : "notes",
												"type" : "String",
												"desc" : "A small description about the time log."
											},
											{
												"name" : "users",
												"type" : "Long",
												"desc" : "ID of the user who worked on the item.",
												"isrequired" : ""
											},
											{
												"name" : "isbillable",
												"type" : "int",
												"desc" : "Set the billability status of the time log (0 - non-billable | 1 - billable).",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update log hours",
							"desc" : "Update a specific time log of a specific item.",
							// i18n
							"scope" : "ZohoSprints.timesheets.UPDATE",
							// i18n
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/item/{itemId}/timesheet/{itemLogId}/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/item/579000000121139/timesheet/579000000128433/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=updateitemlog' \\--data-urlencode 'duration=2h' \\--data-urlencode 'date=2017-12-20T00:00:00+05:30' \\--data-urlencode 'notes=' \\--data-urlencode 'users=579000000002003' \\--data-urlencode 'isbillable=0'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>updateitemlog</b>",
												"isrequired" : ""
											},
											{
												"name" : "duration",
												"type" : "String",
												"desc" : "Time spent on the item."
											},
											{
												"name" : "date",
												"type" : "dateformat",
												"desc" : "Date on which the item was worked on.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30"
											},
											{
												"name" : "notes",
												"type" : "String",
												"desc" : "A small description about the time log."
											},
											{
												"name" : "users",
												"type" : "Long",
												"desc" : "ID of the user who worked on the item."
											},
											{
												"name" : "isbillable",
												"type" : "int",
												"desc" : "Set the billability status of the time log (0 - non-billable | 1 - billable).",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},{
							"name" : "Approve log hours",
							"desc" : "Approve a specific time log of a specific item.",
							// i18n
							"scope" : "ZohoSprints.timesheets.UPDATE",
							// i18n
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/timesheet/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/timesheet/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=approveitemlogs' \\--data-urlencode 'itemlogidarr=[\"579000000128433\"]' \\--data-urlencode 'isapproved=true'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>approveitemlogs</b>",
												"isrequired" : ""
											},
											{
												"name" : "isapproved",
												"type" : "Boolean",
												"desc" : "Set the approval status of the log hours (False - Rejected | True - Approved).",
												"isrequired" : ""
											},
											{
												"name" : "itemlogidarr",
												"type" : "JSONArray",
												"desc" : "Log hour IDs to approve or reject the hours logged.",
												"isrequired" : ""
											},
											{
												"name" : "rejectnotes",
												"type" : "String",
												"desc" : "Comments that are added while rejecting the log hours."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Delete log hours",
							"desc" : "Delete a specific time log of a specific item.",
							"scope" : "ZohoSprints.timesheets.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/timesheet/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/timesheet/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=deleteitemlogs' \\--data-urlencode 'itemlogidarr=[\"579000000128433\"]'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>deleteitemlogs</b>",
												"isrequired" : ""
											},
											{
												"name" : "itemlogidarr",
												"type" : "JSONArray",
												"desc" : "Log hour IDs to approve or reject the hours logged.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						} ]
			},
			{
				"tabName" : "Release",
				"tabValues" : [
						{
							"name" : "Release",
							"desc" : "Release management will help plan, organize, and manage every phase of the project. In a broader perspective, release is the largest entity in a project that will help the team members to deliver the outcomes on time. Similar to delivering a workable version in a sprint, release will also help you deliver the outcome, but unlike sprints, release handles a bigger part of your project.  For example, launching a product version, creating a new module etc. ",
							"exploreurl" : "https://help.zoho.com/portal/kb/articles/release-zoho-sprints"
						},
						{
							"name" : "Get release stages",
							"desc" : "Fetch the different release stages. ",
							"scope" : "ZohoSprints.release.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/releasestatus/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/releasestatus/?action=data&index=1&range=25&stagetype=false' \\ -H 'Authorization: Zoho-oauthtoken 1000.ef11d265b83*******43.a44f5da*********afabb6'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"releasestatusJObj":{"3000000000841":["3000000000861","3000000000841",3,false,true,"#ecf6ff","Released",1]},"releasestatusIds":["3000000000841"],"releasestatus_prop":{"projId":0,"statusId":1,"color":5,"statusType":7,"statusName":6,"position":2,"isStart":3,"isEnd":4},"hasNext":false,"nextIndex":101,"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : ""
											},
											{
								        	  	"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired" : ""
											},
											{
												"name" : "stagetype",
												"type" : "Boolean",
												"desc" : "To fetch all the release stages you can skip passing this param.",
												"regex" : "<ul><li>True - Fetches all the stages in the Open type.</li><li>False - Fetches all the stages in the Closed type.</li></ul>",
											}
									],
									"class" : "params"
								}
							} ]

						},
						{
							"name" : "Get releases",
							"desc" : "Fetch all the release from your project.",
							"scope" : "ZohoSprints.release.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/release/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   'https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/release/?action=data&index=1&range=150' \\ -H 'Authorization: Zoho-oauthtoken 1000.ef11d265b83*******43.a44f5da*********afabb6'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"release_prop":{"sequence":6,"goal":4,"statusId":1,"color":3,"statusType":11,"releaseId":0,"releaseDate":8,"createdBy":9,"releaseName":2,"addedVia":10,"startDate":7,"releaseNo":5},"releaseIds":["3000000003479"],"releaseJObj":{"3000000003479":["3000000003479","3000000000839","Beta release","#815433","","1",1,"2020-03-09T18:30:00.000Z","2020-03-26T18:30:00.000Z","3000000000005",0,2]},"hasData":true,"userDisplayName":{"3000000000005":"G*k****e"},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : ""
											},
											{
								        	  	"name" : "index",
												"type" : "int",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : ""
											},
											{
												"name" : "range",
												"type" : "int",
												"desc" : "No. of records that have to be listed.",
												"isrequired" : ""
											},
											{
												"name" : "stagetype",
												"type" : "Boolean",
												"desc" : "To fetch all the releases you can skip passing this param.",
												"regex" : "<ul><li>True - Fetches all the releases in the Open type.</li><li>False - Fetches all the releases in the Closed type.</li></ul>",
											}
									],
									"class" : "params"
								}
							} ]

						},
						{
							"name" : "Get release details",
							"desc" : "Fetch the details of a specific release.",
							"scope" : "ZohoSprints.release.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/release/{releaseId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/release/579000000121139/?action=data  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"release_prop":{"goal":4,"color":3,"releaseDate":8,"releaseName":2,"releasedBy":12,"addedVia":10,"userId":15,"releasedOn":11,"duration":14,"sequence":6,"statusId":1,"startAfter":13,"releaseId":0,"createdBy":9,"startDate":7,"releaseNo":5},"releaseIds":["78155000000006043"],"releaseJObj":{"78155000000006043":["78155000000006043","78155000000002835","Beta Release","#ffc500","","3",3,"2020-03-18T18:30:00.000Z","2020-05-30T18:30:00.000Z","78155000000002003",0,"-1","","-1","73d",["78155000000002003"]]},"userDisplayName":{"78155000000002003":"d*******i@zo******st.com"},"countObj":{"78155000000006043":{"0":{"0":1,"1":3,"3":3,"4":1},"1":{"1":1,"2":1,"3":1}}},"businessDurDiff":{"78155000000006043":{"isAhead":false,"diff":1}},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Create release",
							"desc" : "Create a new release in your project.",
							// i18n
							"scope" : "ZohoSprints.release.CREATE",
							// i18n
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/release/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl --data {'name':'Beta release','color':'#ff90c2','goal':'','startdate':'2020-03-29T00:00:00+05:30','enddate':'2020-04-03T00:00:00+05:30','ownerIds':['3000000000005'],'statusId':'3000000000837'}   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/release/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"release_prop":{"sequence":6,"goal":4,"statusId":1,"color":3,"releaseId":0,"releaseDate":8,"createdBy":9,"releaseName":2,"addedVia":10,"userId":11,"startDate":7,"releaseNo":5},"releaseIds":["3000000005001"],"releaseJObj":{"3000000005001":["3000000005001","3000000000837","Beta release","#ff90c2","","2",2,"2020-03-28T18:30:00.000Z","2020-04-02T18:30:00.000Z","3000000000005",0,["3000000000005"]]},"userDisplayName":{"3000000000005":"Jack Daniels"},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Set a name for the release.",
												"isrequired" : ""
											},
											{
												"name" : "goal",
												"type" : "String",
												"desc" : "Describe the purpose of your release."
											},
											{
												"name" : "startdate",
												"type" : "dateformat",
												"desc" : "Date in which the release should start.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
												"isrequired" : ""
											},
											{
												"name" : "enddate",
												"type" : "dateformat",
												"desc" : "Date in which the release should end.",
												"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
												"isrequired" : ""
											},
											{
												"name" : "statusId",
												"type" : "Long",
												"desc" : "Specify the status ID to create the release in the destined stage."
											},
											{
												"name" : "ownerIds",
												"type" : "JSONArray",
												"desc" : "Pass owner IDs for the release.",
												"isrequired" : ""
											},
											{
												"name" : "color",
												"type" : "Colorcode",
												"desc" : "Color code that you define to your release.",
												"regex" : "<b>(HEXCODE format)</b><br>Example : #3CB371"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Create release stage",
							"desc" : "Add a new stage in your release module.",
							// i18n
							"scope" : "ZohoSprints.release.CREATE",
							// i18n
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/releasestatus/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/releasestatus/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'action=update' \\--data-urlencode 'name=Revise' \\--data-urlencode 'type=0' \\--data-urlencode 'color=#87c35f' \\--data-urlencode 'prevstatusid=3000000000837'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"releasestatusJObj":{"3000000005005":["3000000000861","Revise","3000000005005","#87c35f",0,""]},"releasestatusIds":["3000000005005"],"releasestatus_prop":{"projId":0,"statusId":2,"color":3,"statusType":4,"statusName":1,"position":5},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>update</b>",
												"isrequired" : ""
											},
											{
												"name" : "name",
												"type" : "String",
												"desc" : " Name of the stage in your release. The maximum characters for the stage name is 50.",
												"isrequired" : ""
											},
											{
												"name" : "type",
												"type" : "int",
												"desc" : "Specify stage type.",
												"regex" : "<ul><li>0 - Open</li><li>1 - In progress</li><li>2 - Closed</li></ul>",
												"isrequired" : ""
											},
											{
												"name" : "color",
												"type" : "Colorcode",
												"desc" : "Color code that you define to your release stage.",
												"regex" : "<b>(HEXCODE format)</b><br>Example : #3CB371"
											},
											{
												"name" : "prevstatusid",
												"type" : "Long",
												"desc" : "Status Id after which this new stage should be created."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update release",
							"desc" : "Update the release created in a project.",
							"scope" : "ZohoSprints.release.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/release/{releaseId}/update/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl --data  {'name':'Beta release','color':'#ff90c2','goal':'','startdate':'2020-03-29T00:00:00+05:30','enddate':'2020-04-03T00:00:00+05:30','ownerIds':['3000000000005'],'statusId':'3000000000837'}  https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/release/3000000005001/update/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"release_prop":{"projId":6,"goal":5,"color":2,"statusId":7,"releaseId":0,"releaseDate":4,"releaseName":1,"userId":9,"startDate":3,"releaseNo":8},"releaseIds":["3000000005001"],"releaseJObj":{"3000000005001":["3000000005001","Automation","#ff90c2","2020-03-28T18:30:00.000Z","2020-04-23T18:30:00.000Z","","3000000000861","3000000000837","2",["3000000000005"]]},"userDisplayName":{"3000000000005":"Jack Daniels"},"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
										{
											"name" : "name",
											"type" : "String",
											"desc" : "Set a name for the release.",
											"isrequired" : ""
										},
										{
											"name" : "goal",
											"type" : "String",
											"desc" : "Describe the purpose of your release."
										},
										{
											"name" : "startdate",
											"type" : "dateformat",
											"desc" : "Date in which the release should start.",
											"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
											"isrequired" : ""
										},
										{
											"name" : "enddate",
											"type" : "dateformat",
											"desc" : "Date in which the release should end.",
											"regex" : "<b>yyyy-MM-dd'T'HH:mm:ssZ (ISO format)</b><br>Example : 2017-10-13T00:00:00+05:30",
											"isrequired" : ""
										},
										{
											"name" : "statusId",
											"type" : "Long",
											"desc" : "Specify the status ID to create the release in the destined stage."
										},
										{
											"name" : "ownerIds",
											"type" : "JSONArray",
											"desc" : "Pass owner IDs for the release.",
											"isrequired" : ""
										},
										{
											"name" : "color",
											"type" : "Colorcode",
											"desc" : "Color code that you define to your release.",
											"regex" : "<b>(HEXCODE format)</b><br>Example : #3CB371"
										}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update release stage",
							"desc" : "Update the stage in the release module.",
							// i18n
							"scope" : "ZohoSprints.release.UPDATE",
							// i18n
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/releasestatus/{releasestatusId}/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/releasestatus/3000000005005/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\--data-urlencode 'name=On Hold'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"statusId":"3000000005005","status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "name",
												"type" : "String",
												"desc" : "Name of the stage in your release. The maximum characters for the stage name is 50."
											},
											{
												"name" : "type",
												"type" : "int",
												"desc" : "Specify stage type.",
												"regex" : "<ul><li>0 - Open</li><li>1 - In progress</li><li>2 - Closed</li></ul>"
											},
											{
												"name" : "color",
												"type" : "Colorcode",
												"desc" : "Color code that you define to your release stage.",
												"regex" : "<b>(HEXCODE format)</b><br>Example : #3CB371"
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Delete release",
							"desc" : "Delete a specific release.",
							"scope" : "ZohoSprints.release.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/release/{releaseId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/release/3000000005001/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status": "success"}'
							} ]
						},
						{
							"name" : "Delete release stage",
							"desc" : "Delete a particular stage in your release.",
							"scope" : "ZohoSprints.release.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/releasestatus/{releasestatusId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/3000000000861/releasestatus/3000000005005/  \\-H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"releasestatusJObj":{"3000000000837":[0,"Planning","3000000000861","3000000000837",true,1,"#edf8f3"]},"releasestatusIds":["3000000000837"],"releasestatus_prop":{"projId":2,"statusType":0,"statusId":3,"color":6,"statusName":1,"isStart":4,"position":5},"status":"success"}'
							} ]
						} ]
			},
			{
				"tabName" : "Users",
				"tabValues" : [
						{
							"name" : "Users",
							"desc" : "Users are the workforce of a project. You can create and manage users with the Zoho Sprints APIs.",
							"exploreurl" : "https://help.zoho.com/portal/kb/zoho-sprints/collaborate-with-your-team/users"
						},
						{
							"name" : "Get team users",
							"desc" : "Fetch the list of all the users in a team.<br><span class=\"note\"><span>Note:</span> Applicable only for Admins.</span>",
							"scope" : "ZohoSprints.teamusers.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/users/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : "" 										
											},
											{
												"name" : "index",
												"type" : "Long",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : "" 
											},
											{
												"name" : "range", 
												"type" : "Long",
												"desc" : "No. of records that have to be listed."
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/team/6*******4/users/?action=data&index=1&range=100 \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"userJObj":{"579000000004001":["J**n M***h","j***m@z****r.com",true,"6*******2",1,"4801000000003083","4801000000007001",0],"579000000025015":["c*****s.s","c*****s.s@z****r.com",false,"-1",1,"4801000000003081","4801000000003019",0],"579000000002003":["H***n C*****s","h***nc@z****r.com",true,"6*******7",1,"4801000000003079","4801000000003017",0]},"userIds":["579000000002003","579000000004001","579000000025015"],"user_prop":{"iamUserId":3,"userStatus":4,"displayName":0,"roleId": 5,"profileId": 6,"emailId":1,"isConfirmed":2,"addedVia": 7},"next":false,"status":"success"}'
							} ]
						},
						{
							"name" : "Get project users",
							"desc" : "Fetch the list of all the users in a project.",
							"scope" : "ZohoSprints.projectusers.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/users/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>data</b>",
												"isrequired" : "" 										
											},
											{
												"name" : "index",
												"type" : "Long",
												"desc" : "Index from which the listing has to start.",
												"isrequired" : "" 
											},
											{
												"name" : "range", 
												"type" : "Long",
												"desc" : "No. of records that have to be listed."
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/users/?action=data&index=1&range=100 \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"userJObj":{"579000000004001":["J**n M***h","j***m@z****r.com",true,"6*******2",1,"4801000000003083","4801000000007001",0],"579000000025015":["c*****s.s","c*****s.s@z****r.com",false,"-1",1,"4801000000003083","4801000000007001",0],"579000000002003":["H***n C*****s","h*****c@z****r.com",true,"6*******7",1,"4801000000003083","4801000000007001",0]},"userIds":["579000000002003","579000000004001","579000000025015"],"user_prop":{"iamUserId":3,"userStatus":4,"roleId": 5,"displayName":0,"emailId":1,"profileId": 6,"addedVia": 7,"isConfirmed":2},"zsuserIdvsProjProfileId":{"579000000002003": "4801000000007001","579000000004001": "4801000000007001","579000000025015": "4801000000007001"},"status":"success"}'
							} ]
						},
						{
							"name" : "Get sprint users",
							"desc" : "Fetch the list of all the users in a sprint.",
							"scope" : "ZohoSprints.sprints.READ",
							"method" : "GET",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/users/",
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>alldata</b>",
												"isrequired" : "" 										
											}
									],
									"class" : "params"
								}
							} ],
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X GET   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/users/?action=alldata \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"userJObj":{"579000000004001":["J**n M***h","j***m@z****r.com",true,"6*******2",1,"4801000000003083","4801000000007001",0],"579000000025015":["c*****s.s","c*****s.s@z****r.com",false,"-1",1,"4801000000003083","4801000000007001",0],"579000000002003":["H***n C*****s","h***nc@z****r.com",true,"6*******7",1,"4801000000003083","4801000000007001",0]},"userIds":["579000000002003","579000000004001","579000000025015","579000000106001"],"user_prop":{"iamUserId":3,"userStatus":4,"displayName":0,"roleId": 5,"profileId": 6,"emailId":1,"isConfirmed":2,"addedVia":7},"next": false,"status":"success"}'
							} ]
						},
						{
							"name" : "Add team users",
							"desc" : "Add users to a specific team.",
							"scope" : "ZohoSprints.teamusers.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/users/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/users/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\  --data-urlencode 'users=[{\"roleId\":\"4801000000003083\",\"EMAILID\":\"g*******re.d@zohocorp.com\",\"profileId\":\"4801000000003019\"}]' \\  --data-urlencode 'projids=[\"579000000062001\"]'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"Existing_Users": [],"Deactivated_Users": [],"New_Users":[{"displayName": "g********re.d","emailId":"g*******re.d@zohocorp.com","userId":"579000000106001"}],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "users",
												"type" : "JSONArray",
												"desc" : "The details of the users that have to be added to the team.",
												"isrequired" : "",
												"subparamanchor" : "Show key-value pairs",
												"subparams" : {
												"data" : [
														{
															"name" : "EMAILID",
															"type" : "String",
															"desc" : "Email ID of the new user to be added to your team.",
															"regex" : "Ex: \"h****c@z****r.com\"",
															"isrequired" : ""
														},
														{
															"name" : "profileId",
															"type" : "Long",
															"desc" : "ID of the profile to which user be associated with.",
															"isrequired" : ""
														},
														{
															"name" : "roleId",
															"type" : "Long",
															"desc" : "ID of the role to which user be associated with.",
															"isrequired" : ""
														} ],
														"class" : "subparams"
												}
											},
											{
												"name" : "projids",
												"type" : "JSONArray",
												"desc" : "The IDs of the projects to which the respective users have to be added.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add project users",
							"desc" : "Add users to a specific project.",
							"scope" : "ZohoSprints.projectusers.CREATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/users/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000094045/users/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\  --data-urlencode 'newusers=[{\"roleId\":\"4801000000003083\",\"EMAILID\":\"g*******re.d@zohocorp.com\",\"profileId\":\"4801000000003019\"}]'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"New_Users":[{"displayName": "g********re.d","emailId":"g*******re.d@zohocorp.com","userId":"579000000106001"}],"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "newusers",
												"type" : "JSONArray",
												"desc" : "The details of the users that have to be added to the project.",
												"subparamanchor" : "Show key-value pairs",
												"subparams" : {
												"data" : [
														{
															"name" : "EMAILID",
															"type" : "String",
															"desc" : "Email ID of the new user to be added to your project.",
															"regex" : "Ex: \"h****c@z****r.com\"",
															"isrequired" : ""
														},
														{
															"name" : "profileId",
															"type" : "Long",
															"desc" : "ID of the profile to which user be associated with.",
															"isrequired" : ""
														},
														{
															"name" : "roleId",
															"type" : "Long",
															"desc" : "ID of the role to which user be associated with.",
															"isrequired" : ""
														} ],
														"class" : "subparams"
												}
											},
											{
												"name" : "oldusers",
												"type" : "JSONArray",
												"desc" : "The user IDs of the existing users that have to be added to the project."
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Add sprint users",
							"desc" : "Add existing users to a specific sprint.",
							// i18n
							"scope" : "ZohoSprints.sprints.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/users/",
							// i18n
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/users/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \  --data-urlencode 'action=adduser' \  --data-urlencode 'users=[\"579000000106001\"]'"
							// i18n
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
											{
												"name" : "action",
												"type" : "String",
												"desc" : "Set value as <b>adduser</b>"
											},
											{
												"name" : "users",
												"type" : "JSONArray",
												"desc" : "The user IDs of the existing users that have to be added to the sprint.",
												"isrequired" : ""
											}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Update user role",
							"desc" : "Update the role of a specific user in a team.",
							"scope" : "ZohoSprints.teamusers.UPDATE",
							"method" : "POST",
							"url" : "/team/{teamId}/users/{userId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X POST   https://sprintsapi.zoho.com/zsapi/team/6*******4/users/579000000106001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3' \\  --data-urlencode 'action=role' \\  --data-urlencode 'roleid=4801000000003083'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ],
							"subtitles" : [ {
								"name" : "Parameters",
								"desc" : "",
								"params" : {
									"data" : [
										{
											"name" : "action",
											"type" : "String",
											"desc" : "Set value as <b>role</b>",
											"isrequired" : ""
										},
										{
											"name" : "roleid",
											"type" : "long",
											"desc" : "ID of the role to which user has to be associated.",
											"isrequired" : ""
										}
									],
									"class" : "params"
								}
							} ]
						},
						{
							"name" : "Delete team user",
							"desc" : "Delete a specific user in a team.",
							"scope" : "ZohoSprints.teamusers.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/users/{userId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/users/579000000106001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"projectIds": ["579000000062001"],"status":"success"}'
							} ]
						},
						{
							"name" : "Delete project user",
							"desc" : "Delete a specific user in a project.",
							"scope" : "ZohoSprints.projectusers.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/users/{userId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/users/579000000106001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
						},
						{
							"name" : "Delete sprint user",
							"desc" : "Delete a specific user in a sprint.",
							"scope" : "ZohoSprints.sprints.DELETE",
							"method" : "DELETE",
							"url" : "/team/{teamId}/projects/{projectId}/sprints/{sprintId}/users/{userId}/",
							"request" : [ {
								"name" : "Example Request",
								"requrl" : "curl -X DELETE   https://sprintsapi.zoho.com/zsapi/team/6*******4/projects/579000000062001/sprints/579000000062055/users/579000000106001/ \\  -H 'Authorization: Zoho-oauthtoken 1***.f******************************a.6******************************3'"
							} ],
							"response" : [ {
								"name" : "Example Response",
								"jsonresp" : '{"status":"success"}'
							} ]
						} ]
			} ]
}
var AgileAPI = {
	init: function(){
		this.loadContainer();
		//this.loadPostmanData();
        jQuery("#topbar").text(apiData.topBandName); 
        AgileAPI.constructNavTab();
	},
	loadContainer: function(){
		var leftPanel = jQuery("<nav/>", { 
			"class": "navMenuList", "id": "leftpanel" 
		}).append(jQuery("<div/>", {"class": "leftpanel"}).append( 
			jQuery("<div/>", {"class": "prod_name"}).append( 
				jQuery("<img/>", { 
					"height": "25", "width": "25", "src": "../sprintlogo.svg" 
				})
			).append(
				jQuery("<div/>", {"text": "Zoho Sprints"}) 
			)
		).append(
			jQuery("<ul/>", {"class": "navbar nav", "id": "zsnavtab"}) 
		));

		var centerPanel = jQuery("<div/>", {"class": "totalmain tp_section"}).append( 
			jQuery("<div/>", {"class": "rightpanel1"}).append( 
				jQuery("<div/>", {"class": "content"}).append( 
					jQuery("<h1/>", {"text": "API Documentation"}) 
				)
			)
		).append(jQuery("<div/>", {"class": "rightpanel2"})); 

		jQuery("#agileapidoc").append(leftPanel).append(centerPanel).append(jQuery("<div/>", {"class": "twooverflow", "id": "rightpanel"})); 
	},
    constructNavTab: function(){
        var tabContainer = jQuery("#zsnavtab");
        for (var dk=0, len = apiData.APIList.length; dk < len; dk++){
            var tabs = [];
            var tabJObj = apiData.APIList[dk];
            var needSubTabs = tabJObj.needSubTabs;
            needSubTabs = (needSubTabs === undefined) ? true : needSubTabs;
            var tabElem = tabJObj.tabValues[0];
            var tabName = tabElem.name;
            var liElem = this.getNavElem(tabName, needSubTabs, "parenttab");
            tabs.push(liElem);
            if (needSubTabs){
                var subulElem = jQuery("<ul/>",{"class": "listul subtabs hide"});
                var subLiElems = [];
                for (var gk = 1, glen = tabJObj.tabValues.length; gk < glen; gk++){
                    var tabElem = tabJObj.tabValues[gk];
                    var subtabName = tabElem.name;
                    subLiElems.push(this.getNavElem(subtabName, false, "subtab"));
                }
                subulElem.html(subLiElems);
                liElem.append(subulElem);
            }
            tabContainer.append(tabs);
		}
		jQuery("#agilelogocont").remove(); jQuery("#agileapidoc").removeClass("hide"); 
        this.constructRightPanel();
	}
	,
	getNavElem: function(tabName, needArrow, classes){
        var tabId = tabName.replace(/ /g,"");
        var liElem = jQuery("<li/>", {"class": "arrow navtopage "+classes});
        var jObj = {"href": "#" + tabId, "class" : "tabanchor"};
        if (needArrow){jObj.name = "arw";}
        var hrefElem = jQuery("<a/>", jObj);
        hrefElem.html(tabName);
        liElem.html(hrefElem);
        return liElem;
	},
	constructRightPanel: function(){
        var rightPanelContainer = jQuery("#rightpanel");
        for (var dk=0, len = apiData.APIList.length; dk < len; dk++){
            var tabJObj = apiData.APIList[dk];
            for (var gk = 0, glen = tabJObj.tabValues.length; gk < glen; gk++){
                var tabElem = tabJObj.tabValues[gk];
                var tabName = tabElem.name; 
                var tabId = tabName.replace(/ /g,"");
                var containerElem = jQuery("<div/>", {"class": "totalmain", "name": tabId});
                containerElem.append(this.getRightPanel1Elem(tabElem));
                containerElem.append(this.getRightPanel2Elem(tabElem));
                rightPanelContainer.append(containerElem);
            }
        }
        this.bindPreDefFunc();
	},
	getRightPanel1Elem: function(tabElem){
        var title = tabElem.name;
        var desc = tabElem.desc;
        var rightPanel1Elem = jQuery("<div/>", {"class": "rightpanel1"});
        var contentElem = jQuery("<div/>", {"class": "content"});
        contentElem.append(jQuery("<h1/>",{"text": title}));
        var descElem = jQuery("<p/>"); descElem.html(desc);
        contentElem.append(descElem);
        if(tabElem.hasOwnProperty("exploreurl")){
        	contentElem.append(this.getExploreElem(tabElem.exploreurl));
        }
        if (tabElem.hasOwnProperty("unorderlist")){
            contentElem.append(this.getListElem(tabElem.unorderlist));
        }
        if (tabElem.hasOwnProperty("scope")){
            var scopeElem = jQuery("<div/>", {"class": "scope", "text": tabElem.scope});
            scopeElem.prepend(jQuery("<span/>",{"class": "col000 pr5", "text": "Scope :"}));
            contentElem.append(scopeElem);
        }
        if (tabElem.hasOwnProperty("url")){
            contentElem.append(jQuery("<br/>"));
            contentElem.append(this.getURLElem(tabElem.url, tabElem.method,tabElem.id));
        }
        if (tabElem.hasOwnProperty("subtitles")){
            for (var dk=0, len = tabElem.subtitles.length; dk < len; dk++){
                var subtitleJObj = tabElem.subtitles[dk];
                var title = subtitleJObj.name, titleAdded = false, descAdded = false;
                if (jQuery.trim(title).length > 0){
                    contentElem.append(jQuery("<h3/>", {"text": title})); titleAdded = true;
                }
                if (jQuery.trim(subtitleJObj.desc).length > 0){
                    var descElem = jQuery("<p/>"); descElem.html(subtitleJObj.desc); descAdded = true;
                    contentElem.append(descElem);
                }
                if (subtitleJObj.hasOwnProperty("code")){
                    var codeConainer = jQuery("<p/>");
                    codeConainer.append(this.getCodeElem(subtitleJObj.code));
                    contentElem.append(codeConainer);
                }if (subtitleJObj.hasOwnProperty("table")){
                    contentElem.append(this.getTableElem(subtitleJObj.table));
                }if (subtitleJObj.hasOwnProperty("params")){
                    contentElem.append(this.getParamElem(subtitleJObj.params));
                }if (subtitleJObj.hasOwnProperty("orderlist")){
                    contentElem.append(this.getListElem(subtitleJObj.orderlist, true));
                }
            }
        } 
        rightPanel1Elem.append(contentElem);
        return rightPanel1Elem;
	},
	getExploreElem: function(exploreurl){
    	var exploreMoreElem = jQuery("<div/>", {"class" : "exploremore"});
    	var infoIcon = jQuery("<span/>", {"class" : "infoicon", "text" : "i"})
    	var exploreText = jQuery("<span/>", {"class" : "exploretext", "text" : "Would you like to explore more about the feature? Visit our "});
    	var anchortag = jQuery("<a/>", {"class" : "exploreanchor", "href" : exploreurl, "target" : "_blank", "html" : "help guide"});
    	exploreMoreElem.append(infoIcon);
    	exploreMoreElem.append(exploreText);
    	exploreMoreElem.append(anchortag);
    	return exploreMoreElem;
	},
	getListElem: function(listArr, isOrdered){
        var elem = undefined;
        if (isOrdered){
            elem = jQuery("<ol/>", {"class": "conventions"});
        }else{
            elem = jQuery("<ul/>");
        }
        for (var dk=0, len = listArr.length; dk < len; dk++){
            elem.append(jQuery("<li/>",{"html": listArr[dk].replace(/accounts.zoho.com/, AgileAPI.getRootURL("accounts"))}));
        }
        return elem;
	},
	getURLElem: function(url, method,id){
		var urlElem = jQuery("<div />", {"class": "api"});
		urlElem.append(jQuery("<a />",{"class": method + " method", "text": method,"id":id}));
        urlElem.append(jQuery("<div />",{"class": "url", "text": url.replace(/accounts.zoho.com/, AgileAPI.getRootURL("accounts"))}));
        return urlElem;
	},
	getRootURL : function(service){
    	var buildType = "csez";
    	var rebrandingType = "Zoho";
    	var deploymentType = "US";
    	var rootURLS = {
    			"sprints" : "sprintsapi.zoho.com", 
    			"sprints.zoho.eu" : "sprintsapi.zoho.eu", 
    			"sprints.zoho.cn" : "sprintsapi.zoho.com.cn", 
    			"sprints.zoho.us" : "sprintsapi.zoho.com", 
    			"sprints.zoho.in" : "sprintsapi.zoho.in", 
    			"sprints.manageengine" : "sprintsapi.manageengine.com", 
    			"sprints.local" : window.location.host, 
    			"sprints.csez" : window.location.host, 
    			"accounts" : "accounts.zoho.com", 
    			"accounts.zoho.eu" : "accounts.zoho.eu", 
    			"accounts.zoho.cn" : "accounts.zoho.com.cn", 
    			"accounts.zoho.us" : "accounts.zoho.com", 
    			"accounts.zoho.in" : "accounts.zoho.in", 
    			"accounts.manageengine" : "accounts.zoho.com", 
    			"accounts.local" : "accounts.localzoho.com", 
    			"accounts.csez" : "accounts.csez.zohocorpin.com" 
    	}
    	var dot = ".";
		if("idc" === buildType){
			if("manageengine" === rebrandingType){
	    		return rootURLS[service + dot + rebrandingType];
	    	}
	    	else if("zoho" === rebrandingType){
    			return rootURLS[service + dot + rebrandingType + dot + deploymentType];
	    	}
		}
		else if("local" === buildType){
			return rootURLS[service + dot + buildType];
		}
		else if("csez" === buildType){
			return rootURLS[service + dot + buildType];
		}
    },
	getRightPanel2Elem: function(tabElem){
        var rightPanel2Elem = jQuery("<div/>", {"class": "rightpanel2"});
        if (tabElem.hasOwnProperty("request")){
            var contentElem = jQuery("<div/>", {"class": "examplereq"});
            for (var dk=0, len = tabElem.request.length; dk < len; dk++){
                var requestJObj = tabElem.request[dk];
                var requestHeaderElem = jQuery("<p/>", {"class": "reqhead", "text": requestJObj.name});
                contentElem.append(requestHeaderElem);
                if (requestJObj.requrl){
                	contentElem.append(this.getRequestElem(requestJObj.requrl));
                }
            }
            rightPanel2Elem.append(contentElem);
        }
        if (tabElem.hasOwnProperty("response")){
            var contentElem = jQuery("<div/>", {"class": "examplereq"});
            for (var dk=0, len = tabElem.response.length; dk < len; dk++){
                var responseJObj = tabElem.response[dk];
                var responseHeaderElem = jQuery("<p/>", {"class": "reqhead", "text": responseJObj.name});
                contentElem.append(responseHeaderElem);
                if (responseJObj.jsonresp){
                    contentElem.append(this.getJSONElem(responseJObj.jsonresp));
                }
            }
            rightPanel2Elem.append(contentElem);
        }
        return rightPanel2Elem;
	},
	getRequestElem: function(reqURL){
    	var divElem = jQuery("<div/>", {"class": "answer"});
        
        var pTag = jQuery("<p/>", {"class": "opt"});
        pTag.html(this.pretifyURl(reqURL));
        
        divElem.html(pTag);
        return divElem;
	},
	pretifyURl: function(url){
    	var library = {};
    	var queryURL = '<span class="queryurl">';
    	var queryHeader = '<span class="queryheader">';
    	var queryParams = '<span class="http">  ';
    	var spanClose = '</span>';
    	var brTag = '<br>';
    	library.curl = {
    			replacer: function(matchValue){
    				matchValue = matchValue.replace(/sprintsapi.zoho.com/, AgileAPI.getRootURL("sprints"));
    				matchValue = matchValue.replace(/accounts.zoho.com/, AgileAPI.getRootURL("accounts"));
    				var returnElem = '';
    				if(matchValue.match(/--data-urlencode|-H/g) != null){
    					returnElem = brTag + returnElem + queryParams + matchValue + spanClose;
    				}
    				else if(matchValue.startsWith("curl -X")){
    					returnElem =returnElem + '<span class="http">' + matchValue + spanClose;
    				}
    				else if(matchValue.startsWith("http")){
    					returnElem =returnElem + queryURL + matchValue + spanClose;
    				}else{
    					returnElem = matchValue;
    				}
    				return returnElem;
    			},
    			prettyPrint: function(url){
    				var curlRegex = /curl\s-X\s[A-Z]\S+|\bhttps?:\/\/\S+|--data-urlencode|-H|sprintsapi.zoho.com/gi;
    				return url.toString().replace(curlRegex, this.replacer);
    			}
    	}
    	return library.curl.prettyPrint(url);
	},
	bindPreDefFunc: function(){
		var _parent = this;
		//console.log(_parent);
    	var topBandWidth = jQuery("div[name='Overview'] .rightpanel1").outerWidth();
        jQuery(".tp_section .rightpanel1").outerWidth(topBandWidth+.5)
    	jQuery(".navtopage").on("click", function(e){
    		e.stopPropagation();
    		var anchorElem = jQuery(this).children().eq(0);
    		_parent.scrollTo(anchorElem);
    		_parent.selectActiveTab(anchorElem);
    	});
    	jQuery(".subparamanchor").on("click", function(){
    		var subParamElem = jQuery(this).closest('tr').next();
    		if(subParamElem.hasClass("hide")){
    			subParamElem.removeClass("hide");
    			jQuery(this).html("Hide key-value pairs");
    		}
    		else{
    			subParamElem.addClass("hide");
    			jQuery(this).html("Show key-value pairs");
    		}
    	});
    	jQuery(".anchor").on("click", function(){
    		window.location.hash = jQuery(this).attr("href");
    		_parent.selectTabFromURL();
    	});
    	jQuery(".creatorform").on("click", function(){
    		if(jQuery("#subscribeform").length == 0){
	    		jQuery.get("/html/apidoc/subscribeapiupdates.html", function(htmlContent){
	    			jQuery("div[name='Subscribe'] .rightpanel1").append(htmlContent);
	    				_parent.subscribeAPIUpdate();
	    		});
    		}
		});
		
        this.selectTabFromURL();
        this.selectTabOnScroll();
	},
	selectTabFromURL : function(){
		
    	var hashValue = window.location.hash;
    	hashValue = hashValue != "" ? hashValue : "#Overview";
    	this.selectActiveTab(jQuery("a[href='"+hashValue+"']")); 
    	this.scrollTo(jQuery("a[href='"+hashValue+"']")); 
    	window.location.hash = hashValue;
	},
	selectTabOnScroll : function(){
		var _parent = this;
		console.log("Works");
   	jQuery("#rightpanel").on("scroll",function(){ 	
			var scrollTop = jQuery(this).scrollTop();
			//console.log(scrollTop);
    		jQuery("#rightpanel").children().each(function(index){ 
    			var curTab = jQuery(this);
    			var curTabPositionTop = Math.round(curTab.position().top);
    			if(curTabPositionTop <= 0 && Math.abs(curTabPositionTop) < curTab.height()){
    				var curTabName = "#"+curTab.attr("name"); 
    				if(window.location.hash != curTabName){
	    				window.location.hash = curTabName;
	    				_parent.selectActiveTab(jQuery("a[href='"+curTabName+"']")); 
	    				return false;
    				}
    			}
			})
			console.log("Works");
    	});
	},
	selectActiveTab : function(anchorElem){
		var hashValue = anchorElem.attr("href");
		//console.log(hashValue);
    	anchorElem = jQuery("a.tabanchor[href='"+hashValue+"']");
    	var navigateElem = anchorElem.parent();
    	if(navigateElem.hasClass("subtab")){
    		navigateElem.addClass("selinnertab").siblings().removeClass("selinnertab");
    		if(!navigateElem.closest(".parenttab").hasClass("selectedtab")){
    			navigateElem = navigateElem.closest(".parenttab"); 
    			anchorElem = navigateElem.children().eq(0);
    			jQuery(".subtabs").hide();
    			anchorElem.next().slideDown();
    			navigateElem.addClass("selectedtab").siblings().removeClass("selectedtab");
    		}
			return false;
		}
		if(anchorElem.next().hasClass("subtabs") && !navigateElem.hasClass("selectedtab")){
			jQuery(".subtabs").hide();
			anchorElem.next().slideDown().children().removeClass("selinnertab");
			navigateElem.addClass("selectedtab").siblings().removeClass("selectedtab");
		}
		else if(!navigateElem.hasClass("selectedtab")){
			jQuery(".subtabs").hide();
			navigateElem.addClass("selectedtab").siblings().removeClass("selectedtab");
		}
		else{
			navigateElem.find(".subtabs").children().removeClass("selinnertab");
		}
		//console.log("Wrks")
	},
	scrollTo : function(anchorElem){
		var tabId = anchorElem.attr("href");
		var overScrollTop = jQuery("#rightpanel").scrollTop();
		var tabScorllTop = jQuery("div[name="+tabId.split("#")[1]+"]").position().top;
		jQuery("#rightpanel").scrollTop(Math.round(overScrollTop)+Math.round(tabScorllTop)+1);
		//console.log(tabScorllTop);
	},
	pretifyJSON: function(response){
		var library = {};
		var key = '<span class=json-key>';
		var val = '<span class=json-value>';
		var str = '<span class=json-string>';
		
		library.json = {
			replacer: function(match, pIndent, pKey, pVal, pEnd) {
				var r = pIndent || '';
				if (pKey){
					r = r + key + pKey.replace(/[": ]/g, '') + '</span>: ';
				}
				if (pVal){
					r = r + (pVal[0] == '"' ? str : val) + pVal + '</span>';
				}
				return r + (pEnd || '');
			},
			prettyPrint: function(obj) {
				var jsonLine = /^( *)("[\w]+": )?("[^"]*"|[\w.+-]*)?([,[{])?$/mg;
				return JSON.stringify(obj, null, 3)
					.replace(/&/g, '&amp;').replace(/\\"/g, '&quot;')
					.replace(/</g, '&lt;').replace(/>/g, '&gt;')
					.replace(jsonLine, library.json.replacer);
			}
		};
		return library.json.prettyPrint(response);
    },
    getJSONElem: function(jsonresp){
        var divElem = jQuery("<div/>", {"class": "answer"});
        
        var pTag = jQuery("<p/>", {"class": "opt"});
        pTag.html(this.pretifyJSON(jQuery.parseJSON(jsonresp)));
        
        divElem.html(pTag);
        return divElem;
	},
	getCodeElem: function(codedesc){
        return jQuery("<code/>", {"text": codedesc});
	},
	getTableElem: function(tableJSON){
        var className = tableJSON.class;
        
        var tableData = tableJSON.data;
        var tableElem = jQuery("<table/>", {"class": className});
        for (var dk=0, len = tableData.length; dk < len; dk++){
            var rowElem = tableData[dk];
            
            var trElem = jQuery("<tr/>");
            for (var row = 0, rowlen = rowElem.length; row < rowlen; row++){
                var tdElem = jQuery("<td/>"); tdElem.html(rowElem[row]);
                trElem.append(tdElem);
            }
            tableElem.append(trElem);
        }
        return tableElem;
	},
	getParamElem: function(paramsObject){
        var paramElem = {
        		tdLeft : function(param){
        			var tdLeft = jQuery("<div/>", {"class": "paramleft"});
        			
        			var title = jQuery("<span/>", {"text":  param.name});
        			tdLeft.append(title);
        			
        			if (param.hasOwnProperty("isrequired")){
        				var mandatoryElem = jQuery("<span/>", {"class": "required", "text": "mandatory"});
        				tdLeft.append(mandatoryElem);
        			}
        			if (param.hasOwnProperty("subparamanchor")){
        				var mandatoryElem = jQuery("<a/>", {"class": "w100per inlineblock subparamanchor", "html": param.subparamanchor});
        				tdLeft.append(mandatoryElem);
        			}
        			return tdLeft;
        		},
        		tdRight : function(param){
        			var tdRight = jQuery("<div/>", {"class": "paramright"});
        			
        			if (param.hasOwnProperty("type")){
        				var type = jQuery("<span/>", {"class": "fw600", "text": param.type});
        				tdRight.append(type);
        			}
        			
        			var desc = jQuery("<p/>"); desc.html(param.desc);
        			tdRight.append(desc);
        			
        			if(param.hasOwnProperty("regex")){
        				var regex = jQuery("<span/>", {"class": "regex", "html": param.regex});
        				tdRight.append(regex);
        			}
        			return tdRight;
        		},
        		trElem: function(param){
        			var tdLeft = jQuery("<td/>"); 
        			tdLeft.append(this.tdLeft(param));
        			
        			var tdRight = jQuery("<td/>"); 
        			tdRight.append(this.tdRight(param));
        			
        			var trElem = jQuery("<tr/>");
                    trElem.append(tdLeft);
                    trElem.append(tdRight);
        			return trElem;
        		}
        }
        var paramsArray = paramsObject.data;
        var className = paramsObject.class || "";
        var tableElem = jQuery("<table/>", {"class":"w100per tblfixed bdrcollapse "+className});
        for (var i=0, len = paramsArray.length; i < len; i++){
            var param = paramsArray[i];
            tableElem.append(paramElem.trElem(param));
            if(param.hasOwnProperty("subparams")){
            	 var subParamElem = this.getParamElem(param.subparams);
            	 var trElem = jQuery("<tr/>", {"class": "hide"});
            	 var tdElem = jQuery("<td/>", {"colspan":"2"}); 
            	 tdElem.append(subParamElem);
            	 trElem.append(tdElem);
            	 tableElem.append(trElem);
            }
        }
        
        return tableElem;
    }
}
AgileAPI.init();
